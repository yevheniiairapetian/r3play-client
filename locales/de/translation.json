{
    "notificationCloseTitle":"Schließen",
    "whatsNewInfo":"Was gibt's Neues: Die App wurde nach React.js verschoben, ist jetzt lokalisiert und hat einen Theme-Umschalter. Lesen Sie ",
    "whatsNewLink":" hier mehr",
    "darkModalMessage": "Willkommen auf der dunklen Seite",
"lightModalMessage":"Willkommen auf der Seite des Lichts",
"modalConfirm":"Los geht's!",
"modalHint":"Bitte klicken, um das Modal zu schließen",
    "app_title": "Yevhenii Airapetian - Portfolio",
    "languages": "Sprachen",
    "themeSwitcherLightHint":"Klicken Sie, um zum Lichtthema zu wechseln",
    "themeSwitcherDarkHint":"Klicken Sie, um zum dunklen Thema zu wechseln",
    "welcome text": "Hallo, ich bin Yevhenii!",
    "resume": "Lebenslauf",
    "introduction": "Ich bin ein Webentwickler mit einer Leidenschaft für Technik",
    "experience": "Ich habe bereits Erfahrungen im Unterrichten von Fremdsprachen und im akademischen Schreiben gesammelt und freue mich auf eine Karriere als Webentwickler.",
    "first focus": "Ich habe mich immer darauf konzentriert, qualitativ hochwertige Arbeit abzuliefern und Fristen einzuhalten, wobei ich meine ausgefeilten Fähigkeiten zur Problemlösung, zum Zeitmanagement und zum logischen Denken eingesetzt habe.",
    "second focus": "Mein Ziel ist es, mein Fachwissen mit meinen beruflichen Ambitionen zu kombinieren, um funktionale, ansprechende und zugängliche Softwarelösungen zu entwickeln.",
    "availability": "Ich stehe für Büro- und Hybridarbeit im Raum Berlin und Potsdam oder aus der Ferne zur Verfügung.",
    "hobbies": "Zusätzlich zu meinen Leidenschaften in der Webentwicklung bin ich auch ein aktiver Hobbyfotograf und Fitnessenthusiast, und an jedem anderen Tag kann man mich draußen beim Fotografieren oder beim Gewichtheben antreffen.",
    "code": "Code",
    "projects": "Projekte",
    "projectsInfo": "Hier finden Sie die aktuellen Webentwicklungsprojekte, die ich abgeschlossen und an denen ich gearbeitet habe. Sie haben alle Hyperlinks zur Codebasis und zu den Projektfällen, die meisten haben einen Link zur bereitgestellten Version, und einige haben auch zusätzliche Links",
    "projectsViewTip":"Benutze die Schieberegler, um durch die Projektliste zu klicken. Bewegen Sie den Mauszeiger über eine bestimmte Folie, um auf die Links des Projekts zuzugreifen. Tippen Sie auf eine bestimmte Folie, um weitere Informationen anzuzeigen (auf dem Handy)",    
    "r3playInfo": "Die Web-API-Schnittstelle von R3play, die es den Nutzern ermöglicht, sich zu registrieren und abzumelden, Informationen über Filme, Fernsehserien und Anime einzusehen und ihre Favoritenliste zu verwalten.",
    "r3playAPIInfo": "Mit Node.js, Express und MongoDB entwickelte Web-API, die es Nutzern ermöglicht, sich anzumelden, abzumelden, Informationen über Filme, Fernsehsendungen und Anime anzusehen und Favoriten zu verwalten.",
    "myFlixInfo": "Ein Front-End-Teil für die R3play-Web-API, das mit Angular, Typescript und Material UI entwickelt wurde und es den Benutzern ermöglicht, sich zu registrieren, Filminformationen anzuzeigen und Favoriten hinzuzufügen.",
    "meetInfo": "Eine mit AWS Lambda-Funktionen geschriebene Progressive Web App, die OAuth2-Autorisierung und -Authentifizierung verwendet und Ereignisse aus der Google Calendar API von CareerFoundry anzeigt.",
    "owriteInfo": "Eine React Native-Anwendung, mit der Benutzer chatten können. Benutzer können einen Benutzernamen festlegen, die Chat-Hintergrundfarbe auswählen und Textnachrichten, Bilder und Audioaufnahmen senden.",
    "pokemonInfo": "Eine reaktionsfähige Pokemon-App, die Pokemon mit Ajax von einer externen Pokedex-API abruft und deren Informationen wie Größe, Gewicht, ID sowie Vorder- und Rückseitenbilder anzeigt",
    "toDoInfo": "Eine jQuery und Bootstrap To-Do-App, die es Benutzern ermöglicht, To-Dos zu verwalten. Benutzer können Aufgaben hinzufügen, löschen und neu anordnen, Aufgabenlisten erstellen und löschen und eine Anleitung zur Verwendung der App anzeigen.",
    "portfolioInfo":"Eine reaktionsschnelle Webanwendung, die unter Berücksichtigung von React, React Bootstrap und Barrierefreiheit entwickelt wurde und es Benutzern ermöglicht, Informationen zu meinen Projekten usw. anzuzeigen.",
    
    
    
    "r3playInfoTitle":"Klicken Sie hier, um mehr über die R3play-API zu erfahren.",
"r3playInfoTitleAPIDeployed":"Klicke, um die R3play-API zu öffnen",
"r3playInfoTitleGithub":"Klicke, um das R3play API Github Repository zu öffnen",
"myFlixInfoTitle":"Klicken Sie hier, um mehr über die MyFlix-App zu erfahren",
"myFlixInfoTitleGithub":"Klicke, um das Github-Repository der MyFlix-App zu öffnen",
"myFlixInfoTitleKanban":"Klicke, um das Kanban-Board des myFlix-App-Projekts zu öffnen",
"meetInfoTitle":"Klicken Sie hier, um mehr über die Meet-App zu erfahren.",
"meetInfoTitleDeployed":"Klicke, um die Meet-App zu öffnen",
"meetInfoTitleGithub":"Klicke, um das Github-Repository der Meet-App zu öffnen",
"owriteInfoTitle":"Klicken Sie hier, um mehr über die Owrite-App zu erfahren.",
"owriteInfoTitleGithub":"Klicke, um das Github-Repository der Owrite-App zu öffnen",
"pokemonInfoTitle":"Klicke hier, um mehr über die Pokemon-App zu erfahren",
"pokemonInfoTitleDeployed":"Klicke, um die Pokemon-App zu öffnen",
"pokemonInfoTitleGithub":"Klicke, um das Pokemon App Github Repository zu öffnen",
"toDoInfoTitle":"Klicken Sie hier, um mehr über die To-Do-List-App zu erfahren.",
"toDoInfoTitleDeployed":"Klicke, um die To-Do-List-App zu öffnen",
"toDoInfoTitleGithub":"Klicke, um das Github-Repository der To-Do-List-App zu öffnen.",
"portfolioInfoTitle":"Klicken Sie hier, um mehr über die Portfolio-App zu erfahren.",
"portfolioInfoTitleDeployed":"Klicke, um die Portfolio-App zu öffnen",
"portfolioInfoTitleGithub":"Klicke, um das Github-Repository der Portfolio-App zu öffnen",
"testimonialSliderMore":"Klicken Sie hier, um den vollständigen Testimonialtext anzuzeigen",
  
    
    "projectsSliderMore": "mehr",
    "testimonials": "Die Leute sagen",
    "wordOfMouth": "Ich wäre heute nicht da, wo ich bin, wenn ich nicht das Privileg hätte, mit so vielen wunderbaren Menschen zusammenzuarbeiten.",
    "testimonialsViewTip":"Benutze die Schieberegler, um durch die Liste der Testimonials zu klicken. Bewegen Sie den Mauszeiger über die Überschriften der Testimonials, um mehr zu lesen. Tippen Sie auf ein bestimmtes Zeugnis, um zusätzliche Informationen anzuzeigen (auf dem Handy)",    "testimonial1": "Maya Septriana, Karriereberaterin, CareerFoundry",
    "testimonial2": "Nizar Triki, Software Engineering Manager chez Expensya",
    "testimonial3": "Dejan Gogov, Webentwickler, Wild Code School",
    "testimonial1Text": "Yevhenii ist jemand, mit dem man so einfach zusammenarbeiten kann. Er strebt immer nach Exzellenz. Jedes Mal, wenn ich ihm Feedback gebe, ist er bereit, zuzuhören und die Einreichung anzupassen...",
    "testimonial2Text": "Ich hatte die Gelegenheit, Yevhenii während seiner Webentwicklungsausbildung bei CareerFoundry zu betreuen. Yevheniis Selbstgenügsamkeit, schnelle Auffassungsgabe von Konzepten...",
    "testimonial3Text": "Während unseres 6-monatigen Fullstack-Bootcamps zeigte Yevhenii durchweg ein positives und freundliches Auftreten. Er ging zielstrebig an die Aufgaben heran...",
    "testimonialsMore": "mehr",
    "contact": "Kontakt",
    "suggestion": "Möchtest du mit dir zusammenarbeiten oder hast du einen Vorschlag? Ich bin offen für Angebote und Kommentare.",
    "eMailMe": "Zögern Sie nicht, mir eine E-Mail über das untenstehende Formular zu senden",
    "contactFormHeader": "Kontakt",
    "firstName": "Vorname",
    "firstNamePlaceholder": "Joey",
    "lastName": "Nachname",
    "lastNamePlaceholder": "Tribbiani",
    "phoneNumber": "Telefonnummer",
    "phoneNumberPlaceholder": "+49 1234 5678910",
    "eMail": "E-Mail",
    "eMailPlaceholder": "example@mail.com",
    "messageOrComment": "Nachricht oder Kommentar. Bitte seien Sie nett!",
    "messageOrCommentPlaceholder": "Ihre Nachricht",
    "contactFormTip": "Felder, die mit einem Sternchen gekennzeichnet sind, müssen ausgefüllt werden",
    "contactFormPoweredBy": "Angetrieben von",
    "caseWorkflow":"Arbeitsablauf",
"caseUpgrade":"Aktualisieren",
    "caseDatabase":"Datenbank",
    "caseApi":"API",
    "caseInterface":"App-Schnittstelle",
    "caseTDD": "Testgetriebene Entwicklung",
    "caseServerAndApi": "Serverseitig und API",
    "caseAgile": "Agiler Arbeitsablauf",
    "caseOverview": "Übersicht",
    "casePurpose": "Zweck und Kontext",
    "caseObjective": "Ziel",
    "caseServer": "Server-Seite",
    "caseClient": "Client-Seite",
    "caseApproach": "Ansatz",
    "caseDuration": "Dauer",
    "caseRetrospective": "Retrospektive",
    "caseChallenges": "Herausforderungen.",
    "caseConclusion": " Fazit und wichtige Erkenntnisse",
    "caseMainTakeaways": "Wichtige Erkenntnisse für zukünftige Projekte",
    "apiPreview": "API Vorschau",
    "appPreview": "App Vorschau",
    "caseTechnologies": "Eingesetzte Technologien/Skills",
    "caseCredits": "Credits",
    "r3playCaseHeading": "R3play App Fallstudie",
    "r3playCaseIntroduction": "R3play ist eine Webanwendung, die mit dem MERN-Stack entwickelt wurde und die Benutzer mit Informationen über Filme, TV-Serien und Anime versorgt. Benutzer können auf Informationen zu Filmen, Regisseuren und Genres zugreifen. Benutzer können ein Konto erstellen, ihre Informationen aktualisieren und eine Liste der Lieblingsfilme, TV-Serien und Anime erstellen.",
    "r3playCaseRequired": "R3play war ein erforderliches Projekt, das ich im Rahmen meines Full-Stack-Immersionskurses bei CareerFoundry entwickelt habe, um meine Beherrschung der Full-Stack-Webentwicklung mit JavaScript zu demonstrieren.",
    "r3playCaseAim": "Das Projekt zielte darauf ab, eine voll funktionsfähige Full-Stack-App zu entwickeln, die ich meinem professionellen Portfolio hinzufügen konnte. Das Problem, das ich lösen wollte, bestand darin, die komplette Full-Stack-Webanwendung zu erstellen, indem die zuvor entworfene Server- und Clientseite für die Anwendung von Grund auf neu verbunden wurde.",
    "r3playCaseAboutServer": "Ich habe eine RESTful API mit Node.js und Express entwickelt, die mit einer nicht relationalen Datenbank (MongoDB) interagiert. Die API verwendet gängige HTTP-Methoden wie GET, PUT, POST und DELETE. Um Daten aus der Datenbank abzurufen und in der Datenbank zu speichern, werden CRUD-Methoden verwendet. Die API bietet Film-, TV-Serien- und Anime-Informationen im JSON-Format.",
    "caseViewEndpoints": "Endpunkte anzeigen",
    "r3playCasePostman": "Ich habe Postman verwendet, um Antworten und Anfragen an die API zu testen. Ich habe auch die grundlegende HTTP-Authentifizierung und die JWT-Authentifizierung verwendet, um die Authentifizierungs- und Autorisierungsfunktionen bereitzustellen.",
    "r3playCaseAboutClient": "Nach Abschluss des API-Projekts habe ich die Frontend-Schnittstelle erstellt, die Benutzer benötigen, wenn sie mit der Logik und den Daten aus der API und der Datenbank interagieren. Es ist eine Single-Page, responsive Web-Anwendung, entwickelt mit React und React-Redux. Es zeigt mehrere Interface-Ansichten, einschließlich (aber nicht beschränkt auf) eine Hauptansicht (zeigt eine Liste aller Filme, TV-Serien und Anime), einzelne Filme, TV-Serien und Anime-Ansichten (zeigt Daten zu einem einzelnen Film, einer TV-Serie und einem Anime und ermöglicht es Benutzern, sie zu oder aus ihrer Favoritenliste hinzuzufügen oder zu löschen), eine Anmeldeansicht, eine Registrierungsansicht und eine Profilansicht (in der Benutzer ihre Benutzerdaten und ihre Favoritenliste aktualisieren können).",
    "caseSliderTip":"Benutze die Schieberegler, um durch die Projektliste zu klicken. Bewegen Sie den Mauszeiger über die Überschriften der Folien, um mehr zu erfahren. Tippen Sie auf eine bestimmte Folie, um zusätzliche Informationen anzuzeigen (auf dem Handy)",    "r3playCaseDurationData": "12 Wochen insgesamt (Backend: 7 Wochen, Frontend: 5 Wochen)",
    "r3playCaseConclusionData": "Die Film-App war erst die zweite vollständige Webanwendung, die ich im Full-Stack-Webentwicklungskurs entwickelt habe. Als es fertig war, konzentrierte ich mich darauf, meine Entwicklungsfähigkeiten zu verbessern, insbesondere den testgetriebenen Entwicklungsansatz. Es erfordert die Implementierung der Testphase, bevor die eigentliche Funktionslogik hinzugefügt wird, was eine sicherere, fehlerfreie und schnellere Entwicklung ermöglicht.",
    
    
    "portfolioCaseHeading":"Fallstudie zur Portfolio-App",
"portfolioCaseIntroduction": "Die Portfolio-App ist eine reaktionsschnelle Webanwendung, die mit React und React Bootstrap entwickelt wurde und Benutzern Informationen zu meinen aktuellen Projekten, Testimonials, Kontakten und Informationen zu sozialen Plattformen liefert und in mehrere Fremdsprachen lokalisiert ist. Benutzer können in separaten Ansichten auf Informationen zugreifen, die App in ihre bevorzugte Sprache übersetzen und den Stil auf ein helles oder dunkles Thema umstellen. ",
"portfolioCaseRequired": "Die Portfolio-App war ein erforderliches Projekt, das ich im Rahmen meines \"Einführung in den Webentwicklungskurs \"bei CareerFoundry entwickelt habe, um meine Beherrschung von HTML, CSS und Website-Bereitstellung zu demonstrieren. Darüber hinaus beherrschte ich so weit verbreitete Webentwicklungspraktiken wie App-Tests, CSS-Minimierung, Barrierefreiheit, Unterstützung älterer Browser und CSS-Animationen.",
"portfolioCaseAim":"Das Projekt zielte darauf ab, eine voll funktionsfähige statische Website zu entwickeln und bereitzustellen, die ich als mein professionelles Portfolio verwenden konnte. Das Problem, das ich lösen wollte, bestand darin, die im Kurs \"Einführung in die Webentwicklung\" bei CareerFoundry behandelten Tools zu verwenden, um ein funktionierendes Frontend zu erstellen und bereitzustellen, das als mein professionelles Portfolio verwendet werden sollte.",
"portfolioCaseAboutWorkflow": "In den frühen Phasen des Entwicklungsprozesses habe ich den Inhalt mit HTML strukturiert und die Seiten dann mit einfachem CSS gestaltet. Das total.das js-Plugin half dabei, die Website gemäß den empfohlenen Richtlinien für die Barrierefreiheit im Internet zu strukturieren und zu gestalten. Diese Richtlinien existieren, um Menschen mit körperlichen oder anderen Einschränkungen zu helfen, eine bessere Benutzererfahrung im Internet zu haben. Für diese Zwecke wurden spezielle \"aria\" -Tags sowie informative Beschreibungen und alternative Textdaten verwendet. In der Endphase des Projekts habe ich die Website auf ordnungsgemäße Funktion auf verschiedenen Betriebssystemen und Browsern getestet, einschließlich der Verwendung von Fallback-Javascript für die Unterstützung älterer Internet Explorer-Browser.",
"portfolioCaseAboutUpgrade1": "Nach Abschluss meines Karriere-Foundry \"Full-Stack-Webentwicklungsprogramms \"und während des Studiums im \"Berufsvorbereitungskurs \"der CareerFoundry habe ich beschlossen, die App auf verschiedene Arten zu ändern. Zuerst bekam die Website neue Seiten mit den Falldaten der Projekte, auf denen ich detailliert beschrieb, wie ich während des Studiums bei CareerFoundry an jedem Projekt gearbeitet habe. Zweitens habe ich das Styling aktualisiert, um optisch ansprechender, funktionaler und ästhetischer zu sein. Da statische Websites heutzutage jedoch immer mehr in die Jahre kommen, war es an der Zeit, mein Portfolio auf eine der in der Entwicklergemeinde weit verbreiteten Javascript-Bibliotheken zu migrieren. Wie nach Abschluss mehrerer Projekte im Bootcamp mit React.js, und da ich am erfahrensten damit bin, habe ich beschlossen, es als Skelett meines Projekts zu verwenden.",
"portfolioCaseAboutUpgrade2":"Ich habe die Arbeit mit dem Befehl create react app initialisiert, dann alle HTML- und CSS-Dateien in separate Funktionskomponenten verschoben und neu geschrieben und die erforderlichen Projektabhängigkeiten installiert. Die Projekte, Testimonials und Fälle erhielten ihre separaten Schieberegler mit Beispielen und Video-Durchführungen. Später habe ich die App in mehrere Fremdsprachen lokalisiert, ein dunkles Thema eingeführt und die App aktualisiert, um die Sprach- und Themeneinstellungen des Benutzers zu speichern. Und schließlich habe ich mein Portfolio in eine progressive Webanwendung umgewandelt. Mit dieser Funktion können Benutzer die App auf Desktop- und Mobilgeräten installieren und so eine native App-Erfahrung wie auf Android- oder Windows-Plattformen nachahmen.",
"caseTotally":"Besuchen Sie Totally.js Github Repository",
"portfolioCaseAboutClient":"Ich habe die Front-End-Oberfläche erstellt, um Benutzern die Möglichkeit zu geben, mit den Daten meines professionellen Portfolios zu interagieren. Es war ursprünglich eine statische Website, die mit einfachem HTML, CSS und Total entwickelt wurde.js, ein Javascript-Plugin zum Testen der Barrierefreiheit. Es hatte separate HTML-Seiten für die Haupt-, Projekt-, Kontakt- und andere Informationen.",
"portfolioCaseDurationData":"Insgesamt 2 Wochen für das erste Projekt. 3-6 monate in Summe für das aktuelle Ergebnis",
"portfolioCaseConclusionData":"Die Portfolio-Website war das erste Projekt im Webentwicklungs-Bootcamp der Career Foundry. Als es fertig war, habe ich den \"Full-Stack-Immersionskurs\" mit der Arbeit an der Pokemon-App begonnen.",
"portfolioCaseConclusionData2": "Es war eine großartige und lohnende Erfahrung, die App im Ausgangszustand bis zu den neuesten Verbesserungen zu entwerfen und zu debuggen. Ich habe auch neue Fähigkeiten hinzugefügt und auf den alten aufgebaut (auch wenn ich alleine arbeite), z. B. das Polieren der Kopie, das Debuggen der Bereitstellung von React-Apps, die Verwendung von Lokalisierungsbibliotheken, das Einführen und Anpassen von Themes, das Arbeiten mit lokalem Speicher, bessere Styling-Praktiken und andere.",
"portfolioCaseChallenge":"Die Entwicklung des ersten Projekts war relativ einfach und fehlerfrei, da ich bereits Erfahrung mit den dafür erforderlichen Technologien hatte. Tatsächlich habe ich es geschafft, es 1 Woche vor der erforderlichen Frist abzuschließen und meine Einreichungen als Beispiel für andere Studenten zu präsentieren.",
"portfolioCaseChallenge2": "Als ich jedoch zu den komplexeren Technologien überging und über die Anforderungen des Projekts hinausging, stieß ich auf mehrere Probleme. Ein Problem war, dass ich das dunkle Thema nicht vollständig in die App einführen konnte. Als ich das dunkle Thema einschaltete, änderte nur ein Teil der App seinen Stil. Eine andere bezog sich auf die Schwierigkeiten bei der Bereitstellung und den dafür erforderlichen Reaktionseinstellungen. Glücklicherweise haben mir die während des Bootcamps erworbenen Kenntnisse bei der Lösung dieser Hindernisse geholfen und ich konnte: ",
"portfolioCaseChallengeDetail1":"Nutze meine Recherche- und Fehlerbehebungsfähigkeiten, um die Probleme im Zusammenhang mit dunklen Themen zu beheben.",
"portfolioCaseChallengeDetail2": "Recherchieren und beheben Sie die bereitstellungsbezogenen Probleme",
"portfolioMainTakeaway1":"Beharrlichkeit ist eine wichtige Fähigkeit in der Webentwicklung, ebenso wie die Wahl, Kompromisse einzugehen und Prioritäten zu setzen.",
"portfolioMainTakeaway2": "Manchmal kann ein Fehler unerwartet verursacht werden und eine Lösung erfordert mehr Aufmerksamkeit für Details.",
"portfolioMainTakeaway3": "Es gibt immer Raum für Verbesserungen in Ihren Projekten, daher ist es wichtig, den Moment zu verstehen, in dem Sie weitermachen und / oder Prioritäten setzen müssen.",
"portfolioMainTakeaway4":"Code wird (schnell) veraltet oder benötigt ein Update, daher ist es eine gute Idee, von Zeit zu Zeit in Ihre älteren Projekte einzuchecken. ",

"portfolioSlide1Heading":"Info-Ansicht (Helles Thema)",
"portfolioSlide2Heading":"Info-Ansicht (Dunkles Thema)",
"portfolioSlide3Heading":"Lokalisierte Projektfallansicht",
"portfolioSlide1Description":"Die Info-Ansicht der Portfolio-App, in der Benutzer mehr über den Autor lesen, auf die Codebasis zugreifen und Lebensläufe erstellen können (wird im hellen Design angezeigt).",
"portfolioSlide2Description":"Die Info-Ansicht der Portfolio-App, in der Benutzer mehr über den Autor lesen, auf die Codebasis zugreifen und Lebensläufe erstellen können (in dunklem Design angezeigt).",
"portfolioSlide3Description":"Eine der Projektfallansichten, die lokalisiert ist (in diesem Beispiel in die deutsche Sprache).",
    
    
    "myFlixCaseHeading": "MyFlix App Fallstudie",
    "myFlixCaseIntroduction": "MyFlix-Angular-App ist eine Web-App, die mit dem MEAN-Stack entwickelt wurde, die Benutzer mit Informationen über Filme versorgt. Benutzer können auf Informationen zu Filmen, Regisseuren und Genres zugreifen. Benutzer können ein Konto erstellen, ihre Informationen aktualisieren und eine Liste der Lieblingsfilme erstellen.",
    "myFlixCaseRequired": "MyFlix-Angular-App war ein erforderliches Projekt, das ich im Rahmen meines Full-Stack-Immersionskurses bei CareerFoundry entwickelt habe, um meine Beherrschung der Full-Stack-Webentwicklung mit JavaScript zu demonstrieren. Zusätzlich übte ich mich in agilem Projektmanagement, Feedback-Bereitstellung und Dokumentationserstellung.",
    "myFlixCaseAboutServer": "Ich habe eine RESTful API mit Node.js und Express entwickelt, die mit einer nicht relationalen Datenbank (MongoDB) interagiert. Die API verwendet gängige HTTP-Methoden wie GET, PUT, POST und DELETE. Um Daten aus der Datenbank abzurufen und in der Datenbank zu speichern, werden CRUD-Methoden verwendet. Die API bietet Film-, TV-Serien- und Anime-Informationen im JSON-Format.",
    "myFlixCasePostman": "Ich habe Postman verwendet, um Antworten und Anfragen an die API zu testen. Ich habe auch die grundlegende HTTP-Authentifizierung und die JWT-Authentifizierung verwendet, um die Authentifizierungs- und Autorisierungsfunktionen bereitzustellen.",
    "myFlixCaseAgileData": "Die Arbeit am Projekt begann mit der Erstellung des Kanban-Boards und der Befüllung mit den Projektanforderungen und User Stories. Wenn ein Projektvorgang abgeschlossen wurde, wurde er in den Abschnitt  \"Fertig\" verschoben. Außerdem habe ich mit Typedoc eine detaillierte Dokumentation gemäß den Anforderungen des Projekts erstellt.",
    "myFlixCaseAim": "Das Projekt zielte darauf ab, eine voll funktionsfähige Full-Stack-App zu entwickeln, die ich meinem professionellen Portfolio hinzufügen konnte. Das Problem, das ich lösen wollte, bestand darin, die komplette Full-Stack-Webanwendung zu erstellen, indem die zuvor entworfene Server- und Clientseite für die Anwendung von Grund auf neu verbunden wurde.",
    "myFlixCaseConclusion": "Die myFlix-App war die letzte vollständige Webanwendung, die ich im Full-Stack-Webentwicklungskurs entwickelt habe. Als es fertig war, erweiterte ich mein Portfolio.",
    "myFlixCaseAboutClient": "Ich habe die Front-End-Schnittstelle gebaut, damit Benutzer mit der Logik und den Daten aus der API und der Datenbank interagieren können. Es ist eine einseitige, responsive Webanwendung, die mit Angular und Material UI entwickelt wurde. Es werden mehrere Ansichten der Benutzeroberfläche angezeigt, darunter eine Hauptansicht (zeigt eine Liste aller Filme, eine Schaltfläche zum Verwalten von Favoriten und Schaltflächen zum Anzeigen zusätzlicher Filminformationen), eine Login/Anmeldeansicht und eine Profilansicht (in der Benutzer ihre Benutzerdaten aktualisieren können).",
    "myFlixCaseConclusionData": "Die myFlix-App war die letzte vollständige Webanwendung, die ich im Full-Stack-Webentwicklungskurs entwickelt habe. Als es fertig war, erweiterte ich mein Portfolio.",
    "myFlixCaseConclusionData2": "Die Schwierigkeiten, denen ich am Ende des Projekts begegnete, bezogen sich mehr auf die Besonderheiten von Angular und Github. Ein Problem trat auf, wenn Github-Seiten sich weigerten, die App für eine lange Zeit bereitzustellen. Der andere geschah, als die lokalen Änderungen an der Codebasis in der bereitgestellten App nicht angezeigt wurden. Um dies zu beheben, kontaktierte ich meinen Mentor und Tutor und während einer Paarprogrammierung konnten wir die Probleme beheben.",
    "myFlixCaseConclusionData3": "Es war auch eine nützliche Erfahrung beim Debuggen und Troubleshooting, mit Git-Terminal-Befehlen, Besonderheiten der Arbeit mit Angular und Paar-Programmiersitzungen. Ich habe auch neue Fähigkeiten zu meinem Arsenal hinzugefügt, wie Typescript, Angular, Material UI, richtige Code-Kommentare, Zusammenarbeit und andere.",
    "myFlixCaseDurationData": "Fast 1,5 Wochen (10 Tage)",
    "myFlixCaseChallenge": "Die Entwicklung der myFlix App hat im Vergleich zur R3play React App viel weniger Zeit und Aufwand in Anspruch genommen:",
    "myFlixCaseChallengeDetail1": "Die API wurde bereits gebaut",
    "myFlixCaseChallengeDetail2": "Die umfangreiche Praxis mit React hat dazu beigetragen, schneller voranzukommen",
    "myFlixCaseChallengeDetail3": "Ich habe nicht viele zusätzliche Funktionen hinzugefügt und halte mich an die grundlegenden Kursanforderungen",
    "myFlixCaseChallengeDetail4": "Die Zeit im Programm war bereits begrenzt",
    "myFlixMainTakeaway1": "Verbesserung der Funktionalität der App, um die Funktionen der R3play-App widerzuspiegeln",
    "myFlixMainTakeaway2": "Recherchiere mehr über Typescript",
    "myFlixMainTakeaway3": "Weiterlesen über Material UI",
    "myFlixMainTakeaway4": "Weitere Technologien und Best Practices in der Webentwicklung erforschen",
    "meetCaseHeading": "Meet App Fallstudie",
    "meetCaseIntroduction": "Die Meet-App ist eine reaktionsschnelle progressive Webanwendung, die mit dem testgetriebenen Entwicklungsansatz unter Verwendung der AWS Serverless Lambda-Funktionen, des OAuth2-Google-Authentifizierungs- und Autorisierungsbildschirms und der Recharts-Bibliothek entwickelt wurde, damit Benutzer die Google Kalender-API-Ereignisse anzeigen können. Benutzer können sich bei Google authentifizieren, die Stadt und die Anzahl der Ereignisse angeben, um die Ereignisse anzuzeigen, und mehr über sie lesen. Die App kann dank der PWA-Empfehlungen auf dem Desktop / Handy installiert, sowohl online als auch offline verwendet werden und zeigt Benachrichtigungen an, wenn falsche Daten eingegeben werden und / oder die Internetverbindung unterbrochen wird.",
    "meetCaseRequired": "Meet App war ein erforderliches Projekt, das ich im Rahmen meines Full-Stack-Immersionskurses bei CareerFoundry entwickelt habe, um meine Beherrschung testgetriebener Full-Stack-Webentwicklungsfähigkeiten mit JavaScript und serverlosen Technologien zu demonstrieren.",
    "meetCaseAboutTDD": "Ich habe die Anwendung entwickelt, indem ich zuerst die User Stories geschrieben habe. Mit Hilfe des testgetriebenen Entwicklungsansatzes habe ich die Unit-, Integrations-, Benutzerakzeptanz- und End-to-End-Testmethoden integriert, um die erforderlichen Tests vor der Implementierung des Codes zu schreiben.",
    "meetCaseAboutServerAndApi": "Ich habe die Serverseite mit den AWS Serverless Lambda-Funktionen als Anforderung für das Projekt entwickelt. Der Einsatz von Serverless ermöglicht die Reduzierung des Mehraufwands für die Verwaltung eines Servers und erleichtert die Skalierbarkeit. Für die Veranstaltungsdaten der App wurde der Google-Kalender von CareerFoundry verwendet. Der Google OAuth2-Authentifizierungsbildschirm wurde eingerichtet, um Benutzer für die App zu authentifizieren und zu autorisieren. In der Endphase der Entwicklung habe ich den Service Worker von React genutzt, um die App in eine progressive Webanwendung umzuwandeln. Die Recharts-Bibliothek ermöglicht die Visualisierung von Ereignisdaten in Form von zwei Arten von Diagrammen (Streuung und Kreis).",
    "meetCaseAim": "Das Projekt zielte darauf ab, eine voll funktionsfähige Full-Stack-App zu entwickeln, die ich meinem beruflichen Portfolio hinzufügen konnte. Das Problem, das ich lösen wollte, bestand darin, eine vollständige Full-Stack-Webanwendung zu erstellen, indem der testgetriebene Entwicklungsansatz unter Verwendung der serverlosen AWS-Lambda-Funktionen React verwendet wurde.js und die Anforderungen für Progressive Web Apps.",
    "meetCaseConclusion": "Die Meet-App war ein herausforderndes, aber interessantes Projekt. Als es fertig war, ging ich zum nächsten Projekt über, bei dem es um native App-Entwicklung mit React Native ging.",
    "meetCaseAboutClient": "Für den visuellen Teil wurde das Frontend responsiv mit regulärem CSS und JSX gestaltet.",
    "meetCaseConclusionData": "Die Meet-App war eines der letzten Projekte im Full-Stack-Webentwicklungskurs. Als es fertig war, konzentrierte ich mich darauf, meine Fähigkeiten in der Reaktionsentwicklung zu verbessern, insbesondere indem ich in ein neues Thema eintauchte - Native App-Entwicklung mit React Native und Android Studio.",
    "meetCaseDurationData": "Fast 1 Monat (28 Tage)",
    "meetCaseChallenge1": "Die größte Herausforderung für mich in diesem Projekt war der testgetriebene Entwicklungsansatz selbst. Nachdem ich zuvor Code im verhaltensgesteuerten Stil geschrieben hatte, musste ich einige Zeit damit verbringen, mich an die neue Methode zu gewöhnen. Die Arbeit an der App verlief jedoch recht gut und ich habe mich schnell an das neue Thema gewöhnt. Eines der Probleme bei der Arbeit an dem Projekt war die Unfähigkeit der Benutzer, sich bei der App zu authentifizieren. Nachdem ich mich an meinen Tutor gewandt hatte, löste ich das Problem, indem ich die Testbenutzer manuell über die Google Developer Console hinzufügte.",
    "meetCaseChallenge2": "Nach der Fehlerbehebung bei der Installation der App auf einem Smartphone habe ich sie erfolgreich in eine Progressive Web-App umgewandelt. Ich habe auch gerne mit den Benutzerbenachrichtigungen und der Aufladebibliothek gearbeitet. Ich habe auch meine Kenntnisse und Fähigkeiten über den TDD-Ansatz und die Einrichtung der AWS- und Google-Entwicklerkonten verbessert sowie die Inhaberschaft der Domain bestätigt.",
    "meetMainTakeaway1": "Üben Sie den TDD-Ansatz bei Nebenprojekten",
    "meetMainTakeaway2": "Erfahren Sie mehr über Datenvisualisierung",

    "owriteCaseHeading": "Fallstudie zur Owrite-App",
    "owriteCaseIntroduction": "OWrite ist eine React Native Echtzeit-Chat-Anwendung, die mit React Native, Expo CLI, Richtlinien für Barrierefreiheit und Android Studio für die App selbst sowie Google Firebase und Firestore für die Datenbank entwickelt wurde. Es bietet Benutzern Chat-Funktionen in Echtzeit, einschließlich Anzeigen des Nachrichtenverlaufs dank asynchronem Speicher, Senden von Nachrichten, Fotos, Audioaufnahmen und Geolokalisierungsdaten. Benutzer können ihren Benutzernamen festlegen und die Hintergrundfarbe der App auswählen.",
    "owriteCaseRequired": "OWrite war ein erforderliches Projekt, das ich im Rahmen meines Full-Stack-Immersionskurses bei CareerFoundry entwickelt habe, um meine Beherrschung der nativen App-Entwicklung mit React Native, Expo CLI, Android Studio und Google Firebase / Firestore zu demonstrieren.",
    "owriteCaseAim":"Das Projekt zielte darauf ab, eine voll funktionsfähige native App zu entwickeln, die ich meinem beruflichen Portfolio hinzufügen konnte. Das Problem, das ich lösen wollte, bestand darin, die vollständige native Anwendung zu erstellen, indem die Google Firebase / Firestore-Datenbank mit der mit React Native entwickelten Benutzeroberfläche der App verbunden wurde.",
    "owriteCaseAboutDatabase":"Ich habe die Datenbank mit Google Firebase entwickelt, um zwei zum Testen benötigte Benutzer zu speichern. Später habe ich Google Firestore verwendet, um die Chat-Daten der Benutzer zu speichern.",
    "owriteCaseAboutInterface":"Für die Benutzeroberfläche wurden Android Studio und die Expo Go Android App zu Testzwecken integriert. React Native wurde verwendet, um zwei App-Bildschirme zu entwerfen: einen Begrüßungs- und einen Chat-Bildschirm. Der Begrüßungsbildschirm wurde mit zugänglichen Elementen gemäß den Empfehlungen von React Native gestaltet, ermöglicht das Festlegen eines Benutzernamens und die Auswahl einer Hintergrundfarbe für den Chat-Bildschirm. Der Chat-Bildschirm zeigt den Namen des Benutzers, den Nachrichtenverlauf, ein Textfeld und ein Menü mit zusätzlichen Dateioptionen an. Um die erforderlichen Funktionen zu entwickeln, habe ich Bibliotheken wie Gifted Chat, Expo Media, Expo Image Picker, Stack Navigation und andere integriert. Um eine Offline-Nutzung zu ermöglichen, wurde AsyncStorage verwendet.",
    "owriteCaseAboutServer":"Das Erstellen der Serverlogik begann mit dem Einrichten eines Kontos bei Google Firebase und dessen Konfiguration. Ich fuhr dann fort, die Google Firebase-Konfigurationseinstellungen zur Codebasis hinzuzufügen.",
    "owriteCaseConclusionData": "Die OWrite-App war das vorletzte Projekt, an dem ich im Full-Stack-Webentwicklungskurs gearbeitet habe. Als es fertig war, konzentrierte ich mich darauf, meine Entwicklungsfähigkeiten weiter zu verbessern, insbesondere indem ich meinem Skillset, Angular und Material UI, ein weiteres Front-End-Framework und Designsystem hinzufügte. Das nächste Projekt erforderte diesmal die Neuerstellung des Frontends für die R3play-API mit Angular- und Material-Benutzeroberfläche.",
    "owriteCaseDurationData":"1 Woche",
    "owriteCaseChallenge1": "Die Herausforderungen, mit denen ich während dieses Projekts konfrontiert war, bezogen sich mehr auf die Kurszeitleiste selbst als auf die eigentliche Arbeit an der Codebasis. Wie bereits erwähnt, blieb weniger Zeit für das Ende des Immersionskurses, da ich zusätzliche Anstrengungen zur Verbesserung der R3play-API und der App unternommen habe. Infolgedessen musste ich meinen Zeitplan planen, um das Projekt pünktlich abzuschließen und mich nur auf die erforderlichen und empfohlenen Funktionen zu konzentrieren.",
    "owriteCaseChallenge2": "Die Entwicklung der App hat mir besonders viel Spaß gemacht, weil ich schon immer in die native App-Entwicklung eintauchen wollte und React Native auf meiner Checkliste stand. Darüber hinaus war es erfreulich zu wissen, dass die zuvor erworbenen Fähigkeiten (Zeitmanagement und Priorisierung) mir geholfen haben, das Projekt sehr schnell abzuschließen und neue native Entwicklungsfähigkeiten in meine Toolbox aufzunehmen.",
    "owriteMainTakeaway1": "Üben Sie das Erstellen von Echtzeitanwendungen in Nebenprojekten",
    "owriteMainTakeaway2":"Erfahren Sie mehr über native App-Entwicklung",
    
    
    "pokedexLink":"Pokedex-Schnittstelle",
    "pokemonCaseHeading": "Pokemon-App-Fallstudie",
    "pokemonCaseIntroduction":"Pokemon App ist eine Webanwendung, die mit HTML, CSS, Javascript und Bootstrap entwickelt wurde. Es bietet Benutzern Informationen zu Pokemon, die von der Pokedex-API abgerufen wurden. Benutzer können auf Informationen zu Pokemon-ID, Größe und Gewicht zugreifen, das Vorder- und Rückbild eines Pokemons anzeigen und nach einem Pokemon anhand seines Namens suchen.",
    "pokemonCaseRequired": "Die Pokemon-App war ein erforderliches Projekt, das ich im Rahmen meines Full-Stack-Immersionskurses bei CareerFoundry entwickelt habe, um meine Beherrschung der Webentwicklung mit JavaScript und Bootstrap zu demonstrieren.",
    "pokemonCaseAim":"Das Projekt zielte darauf ab, eine voll funktionsfähige App zu entwickeln, die ich meinem beruflichen Portfolio hinzufügen konnte. Das Problem, das ich lösen wollte, bestand darin, eine Webanwendung mithilfe einer externen API und eines beliebten CSS-Frameworks zu erstellen und zu gestalten.",
    "pokemonCaseAboutApi":"Ich habe die Pokedex-API als Teil der erforderlichen Abhängigkeiten des Projekts verwendet, um die App mit verschiedenen Informationen über Pokemon zu versorgen. Zu diesem Zweck wurden Javascript-Versprechen verwendet, um asynchrone Anfragen und Antworten an / von der Pokedex-API zu verarbeiten.",
    "pokemonCaseAboutClient":"Nachdem ich den logischen Teil der App fertiggestellt hatte, begann ich mit der Stilisierungsphase, indem ich Bootstrap als das erforderliche CSS-Framework des Projekts integrierte. Die Aufgabe bestand darin, das Raster, die Klassen und Komponenten von Bootstrap zu verwenden, um die erforderliche Funktionalität und Reaktionsfähigkeit zu implementieren. Schließlich habe ich die App auf verschiedenen Bildschirmen, Geräten und Betriebssystemen mit den Geräte- / Systememulatoren getestet.",
    "pokemonCaseConclusionData": "Die Pokemon-App war das erste Full-Stack-Immersionskursprojekt. Als es fertig war, konzentrierte ich mich darauf, meine Entwicklungsfähigkeiten zu verbessern, insbesondere in Node einzutauchen.js, Express und APIs. Das Entwerfen meiner eigenen API war ein nützlicher und wichtiger Schritt, um die entscheidenden Back-End-Webentwicklungsfähigkeiten weiter zu beherrschen.",
    "pokemonCaseDurationData":"4 Wochen",
    "pokemonCaseChallenge1": "Der Teil, der die Verwendung von asynchronem Javascript erforderte, war am zeitaufwändigsten, während die Arbeit am Styling relativ einfach war. Insgesamt habe ich 1 Monat gebraucht, um das Projekt abzuschließen, was ungefähr der durchschnittlichen Zeit entspricht. Erstens hatte ich Schwierigkeiten, die spezifischen Pokemon-Informationen anzuzeigen, wie in der Pokedex-Dokumentation beschrieben. Außerdem musste ich das Problem beheben, wenn Daten nicht im Frontend angezeigt wurden.",
    "pokemonCaseChallenge2":"Trotzdem war dies ein lustiges und relativ einfaches Projekt. Ich habe es genossen, in die Grundlagen von Javascript einzutauchen, indem ich AJAX gelernt habe. Es war auch motivierend, Styling mit Hilfe von Bootstrap zu lernen. Ich habe auch schnell nützliche Fähigkeiten in der Arbeit mit Javascript-Versprechen und APIs, beim Lesen von Dokumentationen, beim Styling mit CSS-Frameworks und bei der Fehlerbehebung erworben. Glücklicherweise haben mich mein Mentor und Tutor während des Projekts unterstützt und ich konnte die erworbenen Fähigkeiten später bei der Implementierung zusätzlicher Funktionen in die App anwenden.",
    "pokemonMainTakeaway1":"Verbessere die Debugging-Fähigkeiten, indem du externe Bildungsressourcen übst und verwendest.",
    "pokemonMainTakeaway2":"Bleib motiviert, auch wenn vorübergehende Lernschwierigkeiten auftreten.",
    "pokemonMainTakeaway3":"Verbesserung der digitalen Selbstpflege in Bezug auf Ruhezeiten",
    
    
    
    
    "toDoCaseHeading":"App-Fallstudie durchführen",
    "toDoCaseIntroduction": "Die Aufgabenlisten-App ist eine reaktionsschnelle Webanwendung, die mit HTML, Bootstrap und Javascript entwickelt wurde und Benutzern die Möglichkeit bietet, ihre Aufgaben zu verwalten. Benutzer können unter anderem ihre Aufgaben hinzufügen und löschen.",
    "toDoCaseRequired": "Die To-Do-Listen-App war ein erforderliches Nebenprojekt, das ich im Rahmen meines Full-Stack-Immersionskurses bei CareerFoundry entwickelt habe, um meine Beherrschung der Arbeit mit jQuery zu demonstrieren.",
    "toDoCaseAim":"Das Projekt zielte darauf ab, eine voll funktionsfähige Web-App zu entwerfen, die ich meinem beruflichen Portfolio hinzufügen konnte. Das Problem, das ich lösen wollte, war, einfaches Javascript in jQuery umzuwandeln.",
    "toDoCaseAboutClient":"Nachdem ich den anfänglichen einfachen Javascript-Code mit grundlegenden App-Funktionen erhalten hatte, begann ich, ihn in einen jQuery-Code umzuwandeln. Diese Art von Arbeit ermöglichte es mir, zusätzliche Funktionen und Stile einzuführen.",
    "toDoCaseConclusionData": "Die Aufgabenlisten-App war nur ein Nebenprojekt, das ich im Full-Stack-Immersionskurs gemacht habe, aber es hat mir Spaß gemacht, neue Funktionen und Stile über die Grundanforderungen hinaus hinzuzufügen. Es verbesserte schnell meine Fähigkeiten in jQuery, Bootstrap, Debugging und der Arbeit mit zusätzlichen Bibliotheken.",
    "toDoCaseDurationData":"1 Tag für erforderliche Funktionalität und etwa 3 Wochen für zusätzliche Funktionen",
    "toDoCaseChallenge1": "Die Entwicklung der Grundfunktionen der App bereitete keine Schwierigkeiten und ich habe die Aufgabe innerhalb von 1 Tag erledigt. Ich war jedoch mit der Funktionalität nicht zufrieden und beschloss, zusätzliche Zeit für Verbesserungen zu finden. Diese Ergänzungen verursachten viel Debugging, weil verschiedene jQuery-Bibliotheken nicht gut zusammen funktionierten und wie ich es geplant hatte. Zum Glück haben mir mein Mentor und Tutor bei der Fehlerbehebung geholfen. Vor der Einführung zusätzlicher Funktionen könnte die App:",
    "toDoCaseChallenge2":"Mit den neuen Funktionen ermöglicht es:",
    "toDoMainTakeaway1":"Die Bootstrap-Fähigkeiten verbessern",
    "toDoMainTakeaway2":"Arbeite an den Debugging-Fähigkeiten",
    "toDoMainTakeaway3":"Erweitere die Funktionen der App später",
    "toDoBeforeFeature1":"Aufgaben hinzufügen/löschen",
    "toDoBeforeFeature2":"Aufgaben auf dem Desktop neu anordnen",
    "toDoBeforeFeature3":"Aufgaben streichen",
    "toDoBeforeFeature4":"Integrierte Browser-Warnmeldungen anzeigen",
    "toDoAfterFeature1":"Aufgabenlisten hinzufügen/löschen",
    "toDoAfterFeature2":"Aufgaben zu/von Aufgabenlisten hinzufügen/löschen (einschließlich Drücken der Eingabetaste auf der Tastatur)",
    "toDoAfterFeature3":"Eingabefeld löschen",
    "toDoAfterFeature4": "Aufgaben auf Mobilgeräten mit Hilfe von jQuery Mobile und jQuery Touch Punch neu anordnen und streichen",
    "toDoAfterFeature5":"Schönere Benachrichtigungen mit Hilfe von Bootstrap und jQuery UI anzeigen",
    "toDoAfterFeature6":"Sehen Sie sich eine Anleitung zur Verwendung der App auf verschiedenen Plattformen mit Hilfe von Bootstrap an.",


    "notFound": "Wir konnten diese Ressource nicht finden.",
    "returnHomeParagraph": "Sie können jedoch jederzeit zur ",
    "returnHomeLink": "Startseite zurückkehren",
    "copySkill":"Polieren der Kopie",
"terminalSkill":"Arbeit im Terminal",
"accessibilitySkill":"Zugänglichkeit",
    "externalApiSkill":"Externe API",
    "nativeSkill":"Native App-Entwicklung",
    "troubleshootingSkill":"Fehlerbehebung",
    "TDDSkill": "Testgetriebene Entwicklung",
    "kanbanSkill": "Kanban board",
    "agileSkill": "Agiler Workflow",
    "documentationSkill": "Dokumentation",
    "userStoriesSkill": "Benutzergeschichte",
    "collabSkill": "Teamarbeit",
    "feedbackSkill": "Feedback geben",
    "contributeSkill": "Beitrag leisten",
    "testingSkill": "Testen",
    "apiSkill": "Google Kalender API",
    "pwsSkill": "Progressive Web-Anwendungen",
    "responsiveSkill": "Adaptives Design",
    "deploySkill": "Bereitstellen einer Website",
    "caseLead": "Rolle: Leitender Entwickler",
    "caseTutor": "Tonny Ntambaazi:",
    "caseTutor2": "Kreativdirektor",
    "caseMentor": "Nizar Triki:",
    "caseMentor2": "Leiter Softwareentwicklung",
    "r3playMainTakeaway1": "Konzentrieren Sie sich zuerst auf die erforderliche Funktionalität",
    "r3playMainTakeaway2": "Verbesserung der Zeitmanagement-Fähigkeiten",
    "r3playMainTakeaway3": "Vertiefen Sie das Wissen über die verwendeten Technologien durch Lesen und Üben mehr",
    "r3playMainTakeaway4": "Kein Zweifel, bei technischen Problemen Hilfe zu suchen",
    "r3playCaseChallenge1": "Die Entwicklung der Backend-Seite war die zeitaufwändigste, während die Arbeit auf Kundenseite die technisch schwierigste war. Daher dauerte es länger, bis ich den vollen Stack abgeschlossen hatte, verglichen mit der üblichen Dauer von zwei CareerFoundry-Erfolgen. Der Grund dafür war, dass ich mich auf die funktionalen und visuellen Verbesserungen beider Errungenschaften über die grundlegenden Anforderungen konzentrierte und mehr Zeit benötigte, um die bedingte Darstellung von JSX-Elementen zu beheben und Redux in React zu implementieren, und die bedingte Logik hinter dem Rendern der Filmvorschläge für den Benutzer.",
    "r3playCaseChallenge2": "Trotzdem war das mein Lieblingsprojekt. Ich habe es genossen, die Benutzeroberfläche zu entwickeln und mit Datenbankinformationen zu arbeiten. Ich habe auch schnell meine Terminal-Fähigkeiten, das Verständnis für die Abfrage der MongoDB NoSQL-Datenbank, bedingtes Rendering, Filterdaten, Anpassung von React Bootstrap-Komponenten sowie Zeitmanagement- und Priorisierungsfähigkeiten verbessert. Zum Glück hat mich mein erfahrener Tutor und Mentor während des Projekts unterstützt und ich konnte die erworbenen Fähigkeiten später bei der Implementierung zusätzlicher Funktionen in die App anwenden.",
    "r3playSlide1Heading": "Loginansicht",
    "r3playSlide2Heading": "Filmansicht",
    "r3playSlide3Heading": "Profilansicht",
    "r3playSlide1Description": "Die Anmeldeansicht der R3play-App, in der sich Benutzer in der App anmelden können",
    "r3playSlide2Description": "Die Filmansicht der R3play App, die eine Liste der in der App verfügbaren Filme anzeigt",
    "r3playSlide3Description": "Die Profilansicht der R3play-App, in der Benutzer ihre Kontoinformationen ändern können",
    
    "myFlixSlide1Heading":"Anmelde-Ansicht",
"myFlixSlide2Heading":"Film ansehen",
"myFlixSlide3Heading":"Profilansicht",
"myFlixSlide1Description":"Die MyFlix-App-Anmeldeansicht, in der sich Benutzer bei der App anmelden können",
"myFlixSlide2Description":"Die Filmansicht der MyFlix-App, die eine Liste der in der App verfügbaren Filme anzeigt",
"myFlixSlide3Description":"Die Profilansicht der MyFlix-App, in der Benutzer ihre Kontoinformationen ändern können",


"meetSlide1Heading":"Allgemeine Benutzeroberfläche",
"meetSlide2Heading":"Fehler und Warnungen",
"meetSlide3Heading":"Ereignisdetails",
"meetSlide1Description":"Die in die App geladenen Meet-App-Ereignisse mit den Formularfeldern zum Anpassen der Ergebnisse",
"meetSlide2Description": " Der Meet-App-Ereignisbildschirm wurde mit Warnungen und Fehlern aufgrund der falsch eingegebenen Daten angezeigt.",
"meetSlide3Description":"Der Meet-App-Ereignisbildschirm mit einer Ereigniskarte wurde erweitert",


"owriteSlide1Heading":"Begrüßungsbildschirm",
"owriteSlide2Heading":"Chat-Bildschirm",
"owriteSlide1Description":"Der Begrüßungsbildschirm der Owrite-App, auf dem Benutzer ein Thema auswählen und den Chatraum betreten können.",
"owriteSlide2Description":"Der Chat-Bildschirm der Owrite-App, auf dem Benutzer chatten können, einschließlich Senden von Audio- und Bilddateien.",


"pokemonSlide1Heading":"Begrüßungsnachricht",
"pokemonSlide2Heading":"Pokemon-Ergebnisse",
"pokemonSlide3Heading":"Pokemon-Karte",
"pokemonSlide1Description":"Die Pokemon App Hauptseite mit einer Willkommensnachricht",
"pokemonSlide2Description": "Die Pokemon-App hat Pokemon-Ergebnisse gefiltert, die als Liste angezeigt werden.",
"pokemonSlide3Description":"Die Pokemon-Karte mit Daten, die der Benutzer sehen kann, wenn er auf einen Pokemon-Namen klickt",


"toDoSlide1Heading":"Erste Ansicht",
"toDoSlide2Heading":"Neue Liste",
"toDoSlide3Heading":"Benachrichtigung",
"toDoSlide1Description":"Die erste Ansicht der Aufgaben-App, in der Benutzer Tipps zur Verwendung der App anzeigen und eine erste Liste hinzufügen.",
"toDoSlide2Description":"Eine neue Liste von Aufgaben wurde hinzugefügt",
"toDoSlide3Description":"Wenn der Benutzer das Eingabefeld leer lässt und versucht, eine neue Aufgabe hinzuzufügen, wird eine Benachrichtigung angezeigt.",
    


"cookieInfo1":"Diese App verwendet Cookies und sammelt Besucherdaten. Lesen Sie mehr über ",
"cookieInfo2" : " und ",
"cookieInfo3": "", 
"cookieLink1": "die Cookie-",
"cookieLink2": "Datenschutzrichtlinien",
"cookieConfirm":"Ich bin einverstanden",


    
    "menu": {
        "aboutMenu": "Über",
        "portfolioMenu": "Portfolio App",
        "projectsMenu": "Projekte",
        "casesMenu": "Fälle",
        "testimonialsMenu": "Testimonials",
        "contactMenu": "Kontakt",
        "resumeMenu": "Lebenslauf",
        "r3playMenu": "R3play App",
        "myFlixMenu": "MyFlix App",
        "meetMenu": "Meet App",
        "owriteMenu": "Owrite App",
        "pokemonMenu": "Pokemon App",
        "toDoMenu": "To Do App",
        "policiesMenu":"Nutzungsrichtlinie",
        "cookies": "Cookies",
        "privacy": "Datenschutz"
    },
    "footer": {
        "copy": "© Yevhenii Airapetian, 2024. Alle Rechte vorbehalten.",
        "impressumFooter": "Impressum",
        "toggleTitle":"Klicken, um die Seitenleiste umzuschalten"
    },

    "notFoundImageAlt":"Ein Bild, das einen alten Fernseher zeigt",
"caseHeroAlt":"Ein Bild, das einen Screenshot aus dem Projektfall zeigt",
"caseSliderAlt":"Ein Bild, das einen Screenshot aus einer der Anwendungsansichten zeigt",
"logoAlt":"Ein Bild, das das Logo der Anwendung zeigt",
"contactImageAlt": "Ein Bild, das Schreibutensilien und eine schreibende Person zeigt",
"testimonialsSliderImageAlt":"Ein Bild, das einen Rezensenten zeigt",
"testimonialsImageAlt":"Ein Bild, das ein Team bei der Arbeit zeigt",
"projectsSliderImageAlt":"Ein Bild, das einen Screenshot zeigt, der von einer bereitgestellten App erstellt wurde",
"projectsImageAlt":"Ein Bild, das einen Arbeitsplatz mit einem Laptop und Zubehör zeigt",
    "aboutCvDeAlt": "Ein Symbol mit der deutschen Flagge",
    "aboutCvEnAlt": "Eine Ikone, die die amerikanische Flagge zeigt",
    "aboutCvUkAlt": "Ein Symbol mit der ukrainischen Flagge",
    "aboutCvDeTitle": "Klicken Sie hier, um meinen Lebenslauf auf Deutsch herunterzuladen. Möglicherweise müssen Sie einen Dateibetrachter wie Adobe Acrobat oder ähnliches verwenden.",
    "aboutCvEnTitle": "Klicken Sie hier, um meinen Lebenslauf auf Englisch herunterzuladen. Möglicherweise müssen Sie einen Dateibetrachter wie Adobe Acrobat oder ähnliches verwenden.",
    "aboutCvUkTitle": "Klicken Sie hier, um meinen Lebenslauf auf Ukrainisch herunterzuladen. Möglicherweise müssen Sie einen Dateibetrachter wie Adobe Acrobat oder ähnliches verwenden.",
    "toggleResumeTitle": "Lebenslauf-Dateien umschalten",
    "checkOutCodeTitle": "Code auf Github auschecken",
    "profileImageAlt": "Ein Bild, das einen Mann in einer Jacke zeigt"
}