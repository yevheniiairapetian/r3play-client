{
  "notificationCloseTitle":"Zamknij",
  "whatsNewInfo": "Co nowego: aplikacja została przeniesiona do React.js, jest teraz zlokalizowany i ma toggler tematu. Czytaj więcej ",
  "whatsNewLink": "tutaj",
  "darkModalMessage": "Witamy na ciemnej stronie",
  "lightModalMessage": "Witamy po stronie światła",
  "modalConfirm": "chodźmy!",
  "modalHint": "Kliknij, aby zamknąć modal",
  "app_title": "Yevhenii Airapetian - Portfolio",
  "languages": "języki",
  "themeSwitcherLightHint": "Kliknij tutaj, aby przejść do motywu światła",
  "themeSwitcherDarkHint": "Kliknij tutaj, aby przejść do ciemnego motywu",
  "welcome text": "Cześć, jestem Yevhenii!",
  "resume":"Życiorys",
  "introduction": "Jestem web developerem pasjonującym się technologią",
  "experience": "Dzięki wcześniejszemu doświadczeniu w nauczaniu języków obcych i pisaniu akademickim cieszę się, że mogę rozpocząć karierę jako programista stron internetowych.",
  "first focus": "Zawsze koncentrowałem się na dostarczaniu wysokiej jakości pracy, która dotrzymywała terminów, wykorzystując moje wyrafinowane umiejętności rozwiązywania problemów, zarządzania czasem i logicznego myślenia.",
  "second focus": "Moim celem jest połączenie mojej wiedzy z moimi aspiracjami zawodowymi, aby pomóc w tworzeniu funkcjonalnych, responsywnych i dostępnych rozwiązań programowych.",
  "availability": "Jestem dostępny do zatrudnienia na miejscu i hybrydowego w rejonie Berlina i Poczdamu lub zdalnie.",
  "hobbies": "Oprócz moich pasji w tworzeniu stron internetowych jestem również aktywnym fotografem hobbystycznym i entuzjastą fitnessu, a każdego innego dnia możesz mnie spotkać na zewnątrz, robiąc zdjęcia lub podnosząc duże ciężary.",
  "code": "Kod",
  "projects": "Projekty",
  "projectsInfo": "Tutaj znajdziesz aktualne projekty tworzenia stron internetowych, które ukończyłem i nad którymi pracowałem. Wszystkie mają hiperłącza do bazy kodu i przypadków projektu, większość ma link do wdrożonej wersji, a niektóre mają również dodatkowe linki.",
  "projectsViewTip": "Użyj suwaków, aby kliknąć listę projektów. Najedź kursorem na określony slajd, aby uzyskać dostęp do linków projektu. Dotknij określonego slajdu, aby wyświetlić więcej informacji (na telefonie komórkowym)",  
  "r3playInfo": "Interfejs interfejsu API R3play, który umożliwia użytkownikom rejestrację i wyrejestrowanie, przeglądanie informacji o filmach, serialach telewizyjnych i anime oraz zarządzanie listą ulubionych.",
  "r3playAPIInfo": "Web API opracowany z węzłem.js, Express i MongoDB, umożliwiając użytkownikom rejestrację, wyrejestrowanie, przeglądanie informacji o filmach, serialach telewizyjnych i anime oraz zarządzanie ulubionymi.",
  "myFlixInfo": "Część front-end dla interfejsu API R3play Web zaprojektowany z Angular, Typescript i Material UI, umożliwiając użytkownikom rejestrację, przeglądanie informacji o filmach i dodawanie ulubionych.",
  "meetInfo": "Progresywna aplikacja internetowa napisana z funkcjami AWS Lambda, która wykorzystuje autoryzację i uwierzytelnianie OAuth2 oraz wyświetla zdarzenia z interfejsu API Kalendarza Google CareerFoundry.",
  "owriteInfo": "React Native aplikacja, która pozwala użytkownikom rozmawiać. Użytkownicy mogą ustawić nazwę Użytkownika, wybrać kolor tła czatu i wysyłać wiadomości tekstowe, zdjęcia i nagrania audio.",
  "pokemonInfo": "Responsywna aplikacja Pokemon pobierająca Pokemona z Ajaxem z zewnętrznego interfejsu API Pokedex i wyświetlająca ich informacje, takie jak wzrost Pokemona, waga, identyfikator oraz obrazy z przodu iz tyłu",
  "toDoInfo": "Aplikacja do zadań jQuery i Bootstrap, która pozwala użytkownikom zarządzać zadaniami. Użytkownicy mogą dodawać, usuwać i zmieniać kolejność zadań, tworzyć i usuwać listy rzeczy do zrobienia oraz zapoznać się z przewodnikiem dotyczącym korzystania z aplikacji.",
  "portfolioInfo":"Responsywna aplikacja internetowa opracowana z uwzględnieniem React, React Bootstrap i ułatwień dostępu, umożliwiająca użytkownikom przeglądanie informacji o moich projektach itp.",



  "r3playInfoTitle": "Kliknij, aby przeczytać więcej o interfejsie API R3play",
  "r3playInfoTitleAPIDeployed": "Kliknij, aby otworzyć interfejs API R3play",
  "r3playInfoTitleGithub": "Kliknij, aby otworzyć repozytorium Github API R3play",
  "myFlixInfoTitle": "Kliknij, aby przeczytać więcej o aplikacji MyFlix",
  "myFlixInfoTitleGithub": "Kliknij, aby otworzyć repozytorium Github aplikacji MyFlix",
  "myFlixInfoTitleKanban": "Kliknij, aby otworzyć tablicę Kanban projektu aplikacji myFlix",
  "meetInfoTitle": "Kliknij, aby przeczytać więcej o MeetApp",
  "meetInfoTitleDeployed": "Kliknij, aby otworzyć aplikację MeetApp",
  "meetInfoTitleGithub": "Kliknij, aby otworzyć repozytorium MeetApp Github",
  "owriteInfoTitle": "Kliknij, aby przeczytać więcej o aplikacji Owrite",
  "owriteInfoTitleGithub": "Kliknij, aby otworzyć repozytorium Github aplikacji Owrite",
  "pokemonInfoTitle": "Kliknij, aby przeczytać więcej o aplikacji Pokemon",
  "pokemoninfotitleDeployed": "Kliknij, aby otworzyć aplikację Pokemon",
  "pokemonInfoTitleGithub": "Kliknij, aby otworzyć repozytorium Github aplikacji Pokemon",
  "toDoInfoTitle": "Kliknij, aby przeczytać więcej o aplikacji ToDoList",
  "toDoinfotitleDeployed": "Kliknij, aby otworzyć aplikację ToDoList",
  "toDoInfoTitleGithub": "Kliknij, aby otworzyć repozytorium Github aplikacji ToDoList",
  "portfolioInfoTitle": "Kliknij, aby przeczytać więcej o aplikacji Portfolio",
  "portfolioInfoTitleDeployed": "Kliknij, aby otworzyć aplikację Portfolio",
  "portfolioInfoTitleGithub": "Kliknij, aby otworzyć repozytorium GitHub aplikacji Portfolio",
  "testimonialSliderMore":"Kliknij, aby wyświetlić pełny tekst recenzji",


  "projectsSliderMore": "więcej",
  "testimonials": "Recenzje",
  "wordOfMouth": "Nie byłbym tam, gdzie jestem dzisiaj bez wszystkich wspaniałych ludzi, z którymi miałem zaszczyt pracować.",
  "testimonialsViewTip": "Użyj suwaków, aby kliknąć listę recenzji. Najedź kursorem na nagłówki recenzji, aby przeczytać więcej. Dotknij konkretnej opinii, aby wyświetlić dodatkowe informacje (na telefonie komórkowym)",  "testimonial1": "Maya Septriana, Konsultant ds. kariery, CareerFoundry",
  "testimonial2": "Nizar Triki, Software Engineering Manager chez Expensya",
  "testimonial3": "Dejan Gogov, Web Developer, Wild Code School",
  "testimonial1Text": "Yevhenii to ktoś, z kim tak łatwo jest współpracować. Zawsze dąży do doskonałości. Za każdym razem, gdy przekazuję mu opinię, byłby skłonny wysłuchać i dostosować zgłoszenie...",
  "testimonial2Text": "miałem okazję być mentorem Yevhenii podczas jego szkolenia w zakresie tworzenia stron internetowych w CareerFoundry. Samowystarczalność jewhenii, szybkie zrozumienie pojęć...",
  "testimonial3Text": "podczas naszego 6-miesięcznego bootcampu Fullstack Yevhenii konsekwentnie wykazywał pozytywne i przyjazne zachowanie. Do zadań podchodził z determinacją...",
  "testimonialsMore": "więcej",
  "contact": "Kontakt",
  "suggestion": "Chcesz współpracować lub mieć sugestię? Jestem otwarty na możliwości rekrutacji i komentarze",
  "eMailMe": "Napisz do mnie za pomocą poniższego formularza",
  "contactFormHeader": "Kontakt",
  "firstName": "Imię",
  "firstNamePlaceholder": "Joey",
  "lastName": "Nazwisko",
  "lastNamePlaceholder": "Tribbiani",
  "phoneNumber": "Numer telefonu",
  "phoneNumberPlaceholder": "+49 1234 5678910",
  "eMail":"E-Mail",
  "eMailPlaceholder":"example@mail.com",
  "messageOrComment": "Wiadomość lub komentarz. Proszę, bądź miły!",
  "messageOrCommentPlaceholder": "Twoja wiadomość",
  "contactFormTip": "Wymagane są pola oznaczone gwiazdką",
  "contactFormPoweredBy": "Działa na podstawie",
  
  "caseWorkflow": "Przepływ pracy",
  "caseUpgrade": "Uaktualnienie",
  "caseDatabase":"Baza danych",
  "caseApi": "API",
  "caseInterface": "Interfejs aplikacji",
  "caseTDD": "Rozwój oparty na testach",
  "caseServerAndApi":"Po stronie serwera i API",
  "caseAgile":"Agile Workflow",
  "caseOverview": "Przegląd",
  "casePurpose": "Cel i kontekst",
  "caseObjective":"Cel",
  "caseServer": "Po stronie serwera",
  "caseClient":"Po stronie klienta",
  "caseApproach": "Podejście",
  "caseDuration":"Czas trwania",
  "caseRetrospective": "Retrospective",
  "caseChallenges": "Wyzwania",
  "caseConclusion": "Wnioski i kluczowe wnioski",
  "caseMainTakeaways": "Główne dania na wynos dla przyszłych projektów",
  "apiPreview": "Podgląd API",
  "appPreview": "Podgląd aplikacji",
  "caseTechnologies": "Stosowane technologie / umiejętności",
  "caseCredits": "Uczestnicy",
  "r3playCaseHeading":"Studium przypadku aplikacji R3play",
  "r3playCaseIntroduction": "R3play to aplikacja internetowa opracowana przy użyciu stosu MERN, która dostarcza użytkownikom informacji o filmach, serialach telewizyjnych i anime. Użytkownicy mogą uzyskać dostęp do informacji o filmach, reżyserach i gatunkach. Użytkownicy mogą utworzyć konto, zaktualizować swoje informacje i utworzyć listę ulubionych filmów, seriali telewizyjnych i anime.",
  "r3playCaseRequired": "R3play był wymaganym projektem, który opracowałem w ramach mojego kursu zanurzenia w pełnym stosie w CareerFoundry, aby zademonstrować moje mistrzostwo w tworzeniu stron internetowych z pełnym stosem przy użyciu JavaScript.",
  "r3playCaseAim": "Projekt miał na celu opracowanie w pełni funkcjonującej aplikacji full-stack, którą mógłbym dodać do mojego profesjonalnego portfolio. Problem, który chciałem rozwiązać, polegał na zbudowaniu kompletnej aplikacji internetowej z pełnym stosem, łącząc wcześniej zaprojektowaną stronę serwera i stronę klienta dla aplikacji od podstaw.",
  "r3playCaseAboutServer": "Opracowałem RESTful API przy użyciu Node.js i Express, które współdziałają z nierelacyjną bazą danych (MongoDB). Interfejs API wykorzystuje popularne metody HTTP, takie jak GET, PUT, POST i DELETE. Do pobierania danych i przechowywania danych w bazie danych używane są metody CRUD. Interfejs API zapewnia informacje o filmach, serialach telewizyjnych i anime w formacie JSON.",
  "caseViewEndpoints": "Wyświetl punkty końcowe",
  "r3playCasePostman": "Użyłem listonosza do testowania odpowiedzi i żądań do interfejsu API. Korzystałem również z podstawowego uwierzytelniania HTTP i uwierzytelniania JWT, aby zapewnić funkcje uwierzytelniania i autoryzacji.",
  "r3playCaseAboutClient": "Po zakończeniu projektu API przystąpiłem do budowy interfejsu front-endowego, którego użytkownicy potrzebowaliby podczas interakcji z logiką i danymi z interfejsu API i bazy danych. Jest to jednostronicowa, responsywna aplikacja internetowa, opracowana przy użyciu React i React-Redux. Wyświetla kilka widoków interfejsu, w tym (ale nie wyłącznie) widok główny (pokazuje listę wszystkich filmów, seriali i anime), widok pojedynczego filmu, serialu i anime (pokazuje dane o jednym filmie, serialu i anime oraz umożliwia użytkownikom dodawanie lub usuwanie ich do lub z listy ulubionych), widok logowania, widok rejestracji i widok profilu (gdzie użytkownicy mogą aktualizować swoje dane użytkownika i listę ulubionych).",
  "caseSliderTip": "użyj kontrolek suwaka, aby kliknąć listę projektów. Najedź kursorem na nagłówki slajdów, aby przeczytać więcej. Dotknij określonego slajdu, aby wyświetlić dodatkowe informacje (na telefonie komórkowym)",  
  "r3playCaseDurationData": "Łącznie 12 tygodni (backend: 7 tygodni, frontend: 5 tygodni)",
  "r3playCaseConclusionData": "Aplikacja filmowa była dopiero drugą pełną aplikacją internetową, którą opracowałem na kursie tworzenia stron internetowych Full-Stack. Kiedy to się skończyło, skupiłem się na doskonaleniu moich umiejętności rozwojowych, w szczególności na podejściu do rozwoju opartym na testach. Wymaga wdrożenia fazy testowania przed dodaniem rzeczywistej logiki funkcjonalnej, co pozwala na bezpieczniejszy, wolny od błędów i szybszy rozwój.",


  "portfolioCaseHeading": "Studium przypadku aplikacji Portfolio",
  "portfolioCaseIntroduction": "Portfolio App to responsywna aplikacja internetowa, opracowana przy użyciu React i React Bootstrap, która dostarcza użytkownikom informacji o moich aktualnych projektach, referencjach, kontaktach i platformach społecznościowych i jest zlokalizowana w kilku językach obcych. Użytkownicy mogą uzyskać dostęp do informacji w oddzielnych widokach, przetłumaczyć aplikację na preferowany język i przełączyć Styl na jasny lub ciemny motyw. ",
  "portfolioCaseRequired":"Aplikacja Portfolio była wymaganym projektem, który opracowałem w ramach mojego \"Intro to Web-development course\" w CareerFoundry, aby zademonstrować moje opanowanie HTML, CSS i wdrażania stron internetowych. Dodatkowo opanowałem tak rozpowszechnione praktyki tworzenia stron internetowych, jak testowanie aplikacji, minimalizacja CSS, dostępność, obsługa starszych przeglądarek i animacje CSS.",
  "portfolioCaseAim": "Projekt miał na celu opracowanie i wdrożenie w pełni funkcjonującej statycznej strony internetowej, którą mógłbym wykorzystać jako moje profesjonalne portfolio. Problem, który chciałem rozwiązać, polegał na wykorzystaniu narzędzi opisanych w \"Intro to web-development course\" w CareerFoundry, aby zbudować i wdrożyć działający frontend, który byłby używany jako moje profesjonalne portfolio.",
  "portfolioCaseAboutWorkflow": "Na wczesnych etapach procesu tworzenia ustrukturyzowałem zawartość za pomocą HTML, a następnie stylizowałem strony za pomocą zwykłego CSS. Całkowicie.wtyczka js pomogła uporządkować i stylizować witrynę zgodnie z zalecanymi wytycznymi dotyczącymi dostępności sieci. Wytyczne te istnieją, aby pomóc osobom z ograniczeniami fizycznymi lub innymi w lepszym korzystaniu z Internetu. Do tych celów wykorzystano specjalne tagi \"aria\", a także opisy informacyjne i alternatywne dane tekstowe. W końcowych etapach projektu przetestowałem stronę pod kątem poprawnej pracy na różnych systemach operacyjnych i przeglądarkach, w tym przy użyciu zastępczego javascript do obsługi starszych przeglądarek Internet Explorer.",
  "portfolioCaseAboutUpgrade1":"Po zakończeniu mojej kariery Foundry \"Full-Stack Web-Development Program\" i podczas studiów w CareerFoundry \"kurs przygotowawczy do pracy\", postanowiłem zmienić aplikację na różne sposoby. Najpierw strona otrzymała nowe strony z danymi przypadków projektów, na których szczegółowo opisałem, jak pracowałem nad każdym projektem podczas studiów w CareerFoundry. Po drugie, zaktualizowałem stylizację, aby była bardziej przyjemna wizualnie, funkcjonalna i estetyczna. Ponieważ jednak statyczne strony internetowe stają się obecnie coraz bardziej przestarzałe, nadszedł czas, aby przenieść moje Portfolio do jednej z bibliotek Javascript szeroko używanych przez społeczność programistów. Jak, po ukończeniu kilku projektów w bootcamp z React.js i będąc najbardziej doświadczonym z tym, postanowiłem użyć go jako szkieletu mojego projektu.",
  "portfolioCaseAboutUpgrade2": "Zainicjowałem pracę za pomocą polecenia create react app, a następnie przeniosłem i ponownie zapisałem wszystkie pliki HTML i CSS do oddzielnych komponentów funkcji i zainstalowałem niezbędne zależności projektu. Projekty, Referencje i przypadki otrzymały osobne suwaki z przykładami i przelotami wideo. Później zlokalizowałem aplikację na kilka języków obcych, wprowadziłem ciemny motyw i zaktualizowałem aplikację, aby zapisać preferencje językowe i tematyczne użytkownika. I w końcu zamieniłem swoje Portfolio w progresywną aplikację internetową. Dzięki tej funkcji użytkownicy mogą zainstalować aplikację na komputerach stacjonarnych i urządzeniach mobilnych, naśladując natywną aplikację, taką jak na platformach Android lub Windows.",
  "caseTotally": "Odwiedź Totally.js Github repository",
  "portfolioCaseAboutClient": "Zbudowałem interfejs front-end, aby zapewnić użytkownikom możliwość interakcji z danymi związanymi z moim profesjonalnym portfolio. Pierwotnie była to statyczna strona internetowa, opracowana przy użyciu zwykłego HTML, CSS i całkowicie.js, Wtyczka Javascript do testowania dostępności. Miał oddzielne strony HTML dla głównych, projektów, kontaktów i innych informacji.",
  "portfolioCaseDurationData": "Łącznie 2 tygodnie na początkowy projekt. 3-6 miesięcy w sumie dla bieżącego wyniku",
  "portfolioCaseConclusionData": "Strona Portfolio była pierwszym projektem w career Foundry' s web development Bootcamp. Kiedy to się skończyło, zacząłem \"Full-Stack Immersion course\" od pracy nad aplikacją Pokemon.",
  "portfolioCaseConclusionData2": "zaprojektowanie i debugowanie aplikacji w stanie początkowym do najnowszych ulepszeń było wspaniałym i satysfakcjonującym doświadczeniem. Dodałem również nowe i oparte na starych umiejętnościach (w tym podczas pracy na własną rękę), takich jak polerowanie kopii, debugowanie wdrażania aplikacji React, korzystanie z bibliotek lokalizacyjnych, wprowadzanie i dostosowywanie motywów, praca z lokalną pamięcią masową, lepsze praktyki stylizacji i inne.",
  "portfolioCaseChallenge": "Opracowanie początkowego projektu było stosunkowo łatwe i wolne od błędów, ponieważ miałem już doświadczenie w technologiach, które były do tego wymagane. W rzeczywistości udało mi się go ukończyć 1 tydzień przed wymaganym terminem i dostałem moje zgłoszenia jako przykład dla innych studentów.",
  "portfolioCaseChallenge2": "Jednak gdy sam przeszedłem do bardziej złożonych technologii i wykraczałem poza wymagania projektu, napotkałem kilka problemów. Jednym z problemów było to, że nie mogłem całkowicie wprowadzić ciemnego motywu do aplikacji. Kiedy włączyłem ciemny motyw, tylko część aplikacji zmieniła swój styl. Kolejny dotyczył trudności związanych z wdrożeniem i wymaganymi dla niego ustawieniami React. Na szczęście wiedza zdobyta podczas bootcampu pomogła mi w rozwiązaniu tych przeszkód i udało mi się:",
  "portfolioCaseChallengeDetail1": "Użyj moich umiejętności badawczych i rozwiązywania problemów, aby rozwiązać problemy związane z ciemnym motywem",
  "portfolioCaseChallengeDetail2": "Badania i rozwiązywanie problemów związanych z wdrożeniem",
  "portfolioMainTakeaway1": "Wytrwałość jest ważną umiejętnością w tworzeniu stron internetowych, a także wyborem kompromisu i ustalania priorytetów",
  "portfolioMainTakeaway2": "Czasami błąd może być spowodowany nieoczekiwanie, a rozwiązanie wymaga większej dbałości o szczegóły",
  "portfolioMainTakeaway3": "Zawsze jest miejsce na ulepszenia w twoich projektach, dlatego ważne jest, aby zrozumieć moment, w którym należy przejść dalej i / lub ustalić priorytety",
  "portfolioMainTakeaway4": "Kod (szybko) staje się nieaktualny lub wymaga aktualizacji, więc sprawdzanie starszych projektów od czasu do czasu jest dobrym pomysłem ",
  
  "portfolioSlide1Heading": "Interfejs About (Light theme)",
  "portfolioSlide2Heading": "Interfejs About (Dark theme)",
  "portfolioSlide3Heading": "Przetłumaczony interfejs widoku projektu",
  "portfolioSlide1Description": "Aplikacja Portfolio o widoku, w której użytkownicy mogą przeczytać więcej o autorze, uzyskać dostęp do bazy kodu i wznowić (wyświetlane w jasnym motywie)",
  "portfolioSlide2Description": "Aplikacja Portfolio o widoku, w której użytkownicy mogą przeczytać więcej o autorze, uzyskać dostęp do bazy kodu i wznowić (wyświetlane w ciemnym motywie)",
  "portfolioSlide3Description": "Widok jednego z przypadków projektów, który jest zlokalizowany (w tym przykładzie na język niemiecki)",
  
  
  
  "myFlixCaseHeading":"Studium przypadku aplikacji MyFlix",
  "myFlixCaseIntroduction": "MyFlix-Angular-App to aplikacja internetowa opracowana przy użyciu stosu MEAN, która dostarcza użytkownikom informacji o filmach. Użytkownicy mogą uzyskać dostęp do informacji o filmach, reżyserach i gatunkach. Użytkownicy mogą utworzyć konto, zaktualizować swoje informacje i utworzyć listę ulubionych filmów.",
  "myFlixCaseRequired": "MyFlix-Angular-App był wymaganym projektem, który opracowałem w ramach mojego kursu zanurzenia w pełnym stosie w CareerFoundry, aby zademonstrować moje mistrzostwo w tworzeniu stron internetowych z pełnym stosem przy użyciu JavaScript. Dodatkowo ćwiczyłem zwinne zarządzanie projektami, dostarczanie informacji zwrotnych i umiejętności generowania dokumentacji.",
  "myFlixCaseAboutServer": "Opracowałem RESTful API przy użyciu Node.js i Express, które współdziałają z nierelacyjną bazą danych (MongoDB). Interfejs API wykorzystuje popularne metody HTTP, takie jak GET, PUT, POST i DELETE. Do pobierania danych i przechowywania danych w bazie danych używane są metody CRUD. Interfejs API zapewnia informacje o filmach, serialach telewizyjnych i anime w formacie JSON.",
  "myFlixCasePostman": "Użyłem listonosza do testowania odpowiedzi i żądań do interfejsu API. Korzystałem również z podstawowego uwierzytelniania HTTP i uwierzytelniania JWT, aby zapewnić funkcje uwierzytelniania i autoryzacji.",
  "myFlixCaseAgileData": "Prace nad projektem rozpoczęły się od stworzenia tablicy Kanban i wypełnienia jej wymaganiami projektu i historiami użytkowników. Po zakończeniu zadania projektu zostało ono przeniesione do sekcji\" gotowe\". Ponadto wygenerowałem szczegółową dokumentację za pomocą Typedoc zgodnie z wymaganiami projektu.",
  "myFlixCaseAim": "Projekt miał na celu opracowanie w pełni funkcjonującej aplikacji z pełnym stosem, którą mógłbym dodać do mojego profesjonalnego portfolio. Problem, który chciałem rozwiązać, polegał na zbudowaniu kompletnej aplikacji internetowej z pełnym stosem, łącząc wcześniej zaprojektowaną stronę serwera i stronę klienta dla aplikacji od podstaw.",
  "myFlixCaseConclusion": "Aplikacja myFlix była ostatnią pełną aplikacją internetową, którą opracowałem na kursie tworzenia stron internetowych Full-Stack. Kiedy to się skończyło, zacząłem ulepszać swoje portfolio.",
  "myFlixCaseAboutClient": "Zbudowałem interfejs front-end, aby użytkownicy mogli wchodzić w interakcje z logiką i danymi z interfejsu API i bazy danych. Jest to jednostronicowa, responsywna aplikacja internetowa, opracowana z Angular i Material UI. Wyświetla kilka widoków interfejsu, w tym widok główny (pokazuje listę wszystkich filmów, przycisk do zarządzania ulubionymi i przyciski do przeglądania dodatkowych informacji o filmie), widok logowania/rejestracji oraz widok profilu (w którym użytkownicy mogą aktualizować swoje dane użytkownika).",
  "myFlixCaseConclusionData": "Aplikacja myFlix była ostatnią pełną aplikacją internetową, którą opracowałem na kursie tworzenia stron internetowych Full-Stack. Kiedy to się skończyło, zacząłem ulepszać swoje portfolio.",
  "myFlixCaseConclusionData2": "Trudności, które napotkałem, wydarzyły się pod koniec projektu i dotyczyły bardziej specyfiki Angular i Github. Jeden problem wystąpił, gdy strony Github odmówiły wdrożenia aplikacji przez długi czas. Drugi miał miejsce, gdy lokalne zmiany w bazie kodu nie były wyświetlane w wdrożonej aplikacji. Aby rozwiązać ten problem, skontaktowałem się z moim mentorem i korepetytorem, a podczas sesji programowania w parze udało nam się rozwiązać problemy.",
  "myFlixCaseConclusionData3": "Było to również przydatne doświadczenie w debugowaniu i rozwiązywaniu problemów, przy użyciu poleceń terminala git, specyfiki pracy z Angular i sesji programowania w parach. Dodałem również nowe umiejętności do mojego arsenału, takie jak Typescript, Angular, Material UI, właściwe komentowanie kodu, współpraca i inne.",
  "myFlixCaseDurationData": "Prawie 1,5 tygodnia (10 dni)",
  "myFlixCaseChallenge": "Opracowanie aplikacji myFlix zajęło znacznie mniej czasu i wysiłku w porównaniu z aplikacją R3play React, ponieważ:",
  "myFlixCaseChallengeDetail1": "API zostało już zbudowane",
  "myFlixCaseChallengeDetail2": "Obszerna praktyka z React pomogła szybciej się rozwijać",
  "myFlixCaseChallengeDetail3": "Nie dodałem wielu dodatkowych funkcji i trzymałem się podstawowych wymagań kursu",
  "myFlixCaseChallengeDetail4": "Czas pozostały w programie był już ograniczony",
  "myFlixMainTakeaway1": "Popraw funkcjonalność aplikacji, aby odzwierciedlić funkcje aplikacji R3play",
  "myFlixMainTakeaway2": "Dowiedz się więcej o Typescript",
  "myFlixMainTakeaway3": "Przeczytaj więcej o Material UI",
  "myFlixMainTakeaway4": "Kontynuuj odkrywanie innych technologii i najlepszych praktyk w tworzeniu stron internetowych",
  
  
  
  "meetCaseHeading": "Poznaj studium przypadku aplikacji",
  "meetCaseIntroduction": "Meet App to responsywna progresywna aplikacja internetowa, opracowana przy użyciu podejścia programistycznego opartego na testach przy użyciu funkcji AWS Serverless Lambda, ekranu uwierzytelniania i autoryzacji Google OAuth2 oraz biblioteki Recharts, aby umożliwić użytkownikom przeglądanie wydarzeń API Kalendarza Google. Użytkownicy mogą uwierzytelniać się za pomocą Google, określać miasto i liczbę wydarzeń, aby wyświetlić wydarzenia, i przeczytaj więcej o nich. Aplikacja może być zainstalowana na komputerze stacjonarnym / mobilnym dzięki zaleceniom PWA, używana zarówno online, jak i offline, i wyświetla powiadomienia o wprowadzeniu nieprawidłowych danych i/lub utracie połączenia internetowego.",
  "meetCaseRequired": "Aplikacja Meet była wymaganym projektem, który opracowałem w ramach mojego kursu immersyjnego full-stack w CareerFoundry, aby zademonstrować moje mistrzostwo w testowych umiejętnościach tworzenia stron internetowych z pełnym stosem przy użyciu technologii JavaScript i bezserwerowych.",
  "meetCaseAboutTDD": "Opracowałem aplikację, pisząc najpierw historie użytkowników. Za pomocą podejścia programistycznego opartego na testach włączyłem unit, integrację, akceptację użytkownika i kompleksowe metody testowania, aby napisać wymagane testy przed wdrożeniem kodu.",
  "meetCaseAboutServerAndApi": "Opracowałem stronę serwera przy użyciu bezserwerowych funkcji Lambda AWS jako wymogu dla projektu. Zastosowanie serverless pozwala na ograniczenie dodatkowej pracy przy zarządzaniu serwerem i ułatwia skalowalność. W przypadku danych o wydarzeniach w aplikacji użyto Kalendarza Google CareerFoundry. Ekran uwierzytelniania Google OAuth2 został skonfigurowany w celu uwierzytelniania i autoryzacji użytkowników aplikacji. Na końcowych etapach rozwoju skorzystałem z usługi pracownika React, aby przekształcić aplikację w progresywną aplikację internetową. Biblioteka Recharts umożliwia wizualizację danych zdarzeń w postaci dwóch typów wykresów (Scatter i Pie).",
  "meetCaseAim": "Projekt miał na celu opracowanie w pełni funkcjonującej aplikacji full-stack, którą mógłbym dodać do mojego profesjonalnego portfolio. Problem, który chciałem rozwiązać, polegał na zbudowaniu kompletnej aplikacji internetowej z pełnym stosem, stosując podejście programistyczne oparte na testach przy użyciu funkcji Lambda BEZSERWEROWYCH AWS, React.js i progresywne wymagania dotyczące aplikacji internetowych.",
  "meetCaseConclusionData": "Meet App był trudnym, ale interesującym projektem do ukończenia. Kiedy to się skończyło, przystąpiłem do następnego projektu obejmującego natywne tworzenie aplikacji z React Native.",
  "meetCaseAboutClient": "W części wizualnej nakładka była responsywnie stylizowana za pomocą zwykłego CSS i JSX.",
  "meetCaseDurationData": "Prawie 1 miesiąc (28 dni)",
  "meetCaseChallenge1": "Największym wyzwaniem dla mnie w tym projekcie było samo podejście do rozwoju Oparte na testach. Po napisaniu kodu w stylu opartym na zachowaniu musiałem poświęcić trochę czasu na przyzwyczajenie się do nowej metody. Jednak praca nad aplikacją przebiegła całkiem nieźle i szybko przyzwyczaiłem się do nowego tematu. Jednym z problemów podczas pracy nad projektem była niezdolność użytkowników do uwierzytelnienia się w aplikacji. Po skontaktowaniu się z moim nauczycielem rozwiązałem problem, dodając ręcznie użytkowników testowych za pośrednictwem konsoli programisty Google.",
  "meetCaseChallenge2": "Po rozwiązaniu problemu z instalacją aplikacji na smartfonie z powodzeniem przekształciłem ją w progresywną aplikację internetową. Podobała mi się również praca z powiadomieniami użytkowników i biblioteką doładowań. Poprawiłem również swoją wiedzę i umiejętności w zakresie podejścia TDD oraz zakładania kont AWS i Google Developer, a także potwierdzania własności domeny.",
  "meetMainTakeaway1": "Ćwicz podejście TDD w projektach pobocznych",
  "meetMainTakeaway2": "Dowiedz się więcej o wizualizacji danych",

  "owriteCaseHeading": "Studium przypadku aplikacji Owrite",
  "owriteCaseIntroduction": "OWrite to natywna aplikacja do czatu w czasie rzeczywistym, opracowana przy użyciu React Native, Expo CLI, wytycznych dotyczących dostępności i Android Studio dla samej aplikacji oraz Google Firebase i Firestore dla bazy danych. Zapewnia użytkownikom funkcje czatu w czasie rzeczywistym, w tym Przeglądanie historii wiadomości dzięki AsyncStorage, wysyłanie wiadomości, zdjęć, nagrań audio i danych geolokalizacyjnych. Użytkownicy mogą ustawić swoją nazwę użytkownika i wybrać kolor tła aplikacji.",
  "owriteCaseRequired": "OWrite był wymaganym projektem, który opracowałem w ramach mojego kursu zanurzenia w pełnym stosie w CareerFoundry, aby zademonstrować moje mistrzostwo w tworzeniu natywnych aplikacji przy użyciu React Native, Expo CLI, Android Studio i Google Firebase/Firestore.",
  "owriteCaseAim": "Projekt miał na celu opracowanie w pełni funkcjonującej natywnej aplikacji, którą mógłbym dodać do mojego profesjonalnego portfolio. Problem, który chciałem rozwiązać, polegał na zbudowaniu kompletnej natywnej aplikacji poprzez połączenie bazy danych Google Firebase/Firestore z interfejsem aplikacji zaprojektowanym w React Native.",
  "owriteCaseAboutDatabase": "Opracowałem bazę danych przy użyciu Google Firebase do przechowywania dwóch użytkowników wymaganych do testowania. Później zatrudniłem Google Firestore do przechowywania danych czatu użytkowników.",
  "owriteCaseAboutInterface": "Dla interfejsu, Android Studio i Expo Go Android App zostały włączone do celów testowych. React Native został użyty do zaprojektowania dwóch ekranów aplikacji: powitania i ekranu czatu. Ekran powitalny został zaprojektowany z dostępnymi elementami zgodnie z zaleceniami React Native, pozwala ustawić nazwę użytkownika i wybrać kolor tła ekranu czatu. Ekran czatu wyświetla nazwę użytkownika, historię wiadomości, pole tekstowe i menu z dodatkowymi opcjami plików. Aby opracować wymagane funkcje, włączyłem takie biblioteki, jak Gifted Chat, Expo Media, Expo image Picker, Stack Navigation i inne. Aby umożliwić korzystanie w trybie offline, asyncstorage został użyty.",
  "owriteCaseAboutServer": "Tworzenie logiki serwera rozpoczęło się od założenia konta w Google Firebase i skonfigurowania go. Następnie przystąpiłem do dodania ustawień konfiguracji Google Firebase do bazy kodu.",
  "owriteCaseConclusionData": "Aplikacja OWrite była przedostatnim projektem, nad którym pracowałem na kursie tworzenia stron internetowych z pełnym stosem. Kiedy to się skończyło, skupiłem się na dalszym doskonaleniu moich umiejętności programistycznych, w szczególności dodając kolejny framework front-end i system projektowania do mojego zestawu umiejętności, odpowiednio Angular i Material UI. Następny projekt wymagał odtworzenia interfejsu API R3play z Angular i Material UI tym razem.",
  "owriteCaseDurationData": "1 tydzień",
  "owriteCaseChallenge1": "Wyzwania, przed którymi stanąłem podczas tego projektu, były bardziej związane z samą osią czasu kursu niż z rzeczywistą pracą nad bazą kodu. Jak wspomniano wcześniej, ponieważ poświęciłem dodatkowy wysiłek na ulepszenie interfejsu API i aplikacji R3play, pozostało mniej czasu na zakończenie kursu immersyjnego. W rezultacie musiałem zaplanować swój harmonogram, aby zakończyć projekt na czas i skoncentrować się tylko na wymaganych i zalecanych funkcjach.",
  "owriteCaseChallenge2": "Szczególnie podobało mi się tworzenie aplikacji, ponieważ zawsze chciałem zagłębić się w natywne tworzenie aplikacji, a React Native był na mojej liście kontrolnej. Dodatkowo miło było wiedzieć, że zdobyte wcześniej umiejętności (zarządzanie czasem i ustalanie priorytetów) pomogły mi bardzo szybko ukończyć projekt i dodać nowe natywne umiejętności programistyczne do mojego przybornika.",
  "owriteMainTakeaway1": "Ćwicz tworzenie aplikacji w czasie rzeczywistym w projektach pobocznych",
  "owriteMainTakeaway2": "Dowiedz się więcej o natywnym tworzeniu aplikacji",
  
  
  "pokedexLink": "Pokedex API",
  "pokemonCaseHeading": "Studium przypadku aplikacji Pokemon",
  "pokemonCaseIntroduction": "Pokemon App to aplikacja internetowa opracowana przy użyciu HTML, CSS, Javascript i Bootstrap. Zapewnia użytkownikom informacje o Pokemonach pobranych z API Pokedex. Użytkownicy mogą uzyskać dostęp do informacji o identyfikatorze Pokemona, wzroście i wadze, zobaczyć przedni i tylny obraz Pokemona oraz wyszukać Pokemona według nazwy.",
  "pokemonCaseRequired": "Aplikacja Pokemon była wymaganym projektem, który opracowałem w ramach mojego kursu zanurzenia w pełnym stosie w CareerFoundry, aby zademonstrować moje mistrzostwo w tworzeniu stron internetowych za pomocą JavaScript i Bootstrap.",
  "pokemonCaseAim": "Projekt miał na celu opracowanie w pełni funkcjonującej aplikacji, którą mógłbym dodać do mojego profesjonalnego portfolio. Problem, który chciałem rozwiązać, polegał na zbudowaniu i stylizowaniu aplikacji internetowej za pomocą zewnętrznego interfejsu API i popularnego frameworka CSS.",
  "pokemonCaseAboutApi": "Użyłem API Pokedex jako części wymaganych zależności projektu, aby dostarczyć aplikacji różne informacje o Pokemonie. W tym celu obietnice Javascript zostały użyte do obsługi asynchronicznych żądań i odpowiedzi do/Z interfejsu API Pokedex.",
  "pokemonCaseAboutClient": "Po zakończeniu logicznej części aplikacji rozpocząłem fazę stylizacji, włączając Bootstrap jako wymagany framework CSS projektu. Zadaniem było użycie siatki, klas i komponentów Bootstrap do zaimplementowania wymaganej funkcjonalności i szybkości reakcji. Na koniec Przetestowałem aplikację na różnych ekranach, urządzeniach i systemach operacyjnych za pomocą emulatorów urządzenia/systemu.",
  "pokemonCaseConclusionData": "Aplikacja Pokemon była pierwszym projektem kursu immersyjnego z pełnym stosem. Kiedy to się skończyło, skupiłem się na doskonaleniu moich umiejętności rozwojowych, w szczególności na nurkowaniu w Node.js, Express i API. Zaprojektowanie własnego API było użytecznym i ważnym krokiem do dalszego opanowania kluczowych umiejętności tworzenia stron internetowych.",
  "pokemonCaseDurationData": "4 tygodnie",
  "pokemonCaseChallenge1": "Część wymagająca użycia asynchronicznego Javascript była najbardziej czasochłonna, podczas gdy praca nad stylizacją była stosunkowo łatwa. Ogólnie rzecz biorąc, ukończenie projektu zajęło mi miesiąc 1, który był zbliżony do średniego czasu spędzonego. Po pierwsze, miałem trudności z wyświetlaniem konkretnych informacji o Pokemonach, jak opisano w dokumentacji Pokedex. Musiałem też rozwiązać problem, gdy dane nie były wyświetlane na interfejsie.",
  "pokemonCaseChallenge2": "Niemniej jednak praca nad tym projektem była przyjemna i stosunkowo łatwa. Z przyjemnością zagłębiam się w podstawy Javascript, ucząc się AJAX. Motywowało to również do nauki stylizacji za pomocą Bootstrap. Szybko zdobyłem również przydatne umiejętności w pracy z obietnicami Javascript i interfejsami API, czytaniu dokumentacji, stylizacji za pomocą frameworków CSS i rozwiązywaniu problemów. Na szczęście mój mentor i opiekun pomagali mi podczas projektu i mogłem później zastosować zdobyte umiejętności podczas wdrażania dodatkowych funkcji do aplikacji.",
  "pokemonMainTakeaway1": "Popraw umiejętności debugowania, ćwicząc i wykorzystując zewnętrzne zasoby edukacyjne.",
  "pokemonMainTakeaway2": "Pozostań zmotywowany nawet wtedy, gdy pojawią się przejściowe trudności edukacyjne.",
  "pokemonMainTakeaway3": "Popraw cyfrową samoopiekę dotyczącą czasu odpoczynku",


  "toDoCaseHeading": "Aby zrobić studium przypadku aplikacji",
  "toDoCaseIntroduction": "Aplikacja do listy zadań to responsywna aplikacja internetowa, opracowana przy użyciu HTML, Bootstrap i Javascript i zapewnia użytkownikom możliwość zarządzania zadaniami. Użytkownicy mogą dodawać i usuwać swoje zadania między innymi funkcjami.",
  "toDoCaseRequired": "Aplikacja To-Do-List była wymaganym mini-projektem pobocznym, który opracowałem w ramach mojego kursu zanurzenia w pełnym stosie w CareerFoundry, aby zademonstrować moje mistrzostwo w pracy z jQuery.",
  "toDoCaseAim": "Projekt miał na celu zaprojektowanie w pełni funkcjonującej aplikacji internetowej, którą mógłbym dodać do mojego profesjonalnego portfolio. Problem, który chciałem rozwiązać, polegał na przekształceniu zwykłego Javascript w jQuery.",
  "toDoCaseAboutClient": "Po otrzymaniu początkowego zwykłego kodu Javascript z podstawową funkcjonalnością aplikacji zacząłem przekształcać go w jQuery. Ten rodzaj pracy pozwolił mi wprowadzić dodatkowe funkcje i style.",
  "toDoCaseConclusionData": "Aplikacja do listy rzeczy do zrobienia była tylko pobocznym mini-projektem, który wykonałem na kursie zanurzenia w pełnym stosie, ale podobało mi się dodawanie nowych funkcji i stylizacja powyżej podstawowych wymagań. Szybko zwiększył moje umiejętności w zakresie jQuery, Bootstrap, debugowania i pracy z dodatkowymi bibliotekami.",
  "toDoCaseDurationData": "1 dzień na wymaganą funkcjonalność i około 3 tygodnie na dodatkowe funkcje",
  "toDoCaseChallenge1": "Rozwój podstawowych funkcji aplikacji nie stwarzał żadnych trudności i skończyłem zadanie w ciągu 1 dnia. Jednak nie byłem zadowolony z jego funkcjonalności i postanowiłem znaleźć dodatkowy czas na dodanie ulepszeń. Te dodatki spowodowały wiele debugowania, ponieważ różne biblioteki jQuery nie działały dobrze razem i tak, jak je planowałem. Na szczęście mój mentor i nauczyciel pomogli mi rozwiązać problem. Przed wprowadzeniem dodatkowych funkcji aplikacja może:",
  "toDoCaseChallenge2":"Dzięki nowym funkcjom pozwala na:",
  "toDoMainTakeaway1": "Zwiększ umiejętności Bootstrap",
  "toDoMainTakeaway2": "Pracuj nad umiejętnościami debugowania",
  "toDoMainTakeaway3": "Rozszerz funkcje aplikacji później",
  "toDoBeforeFeature1": "Dodaj / usuń zadania",
  "toDoBeforeFeature2": "Zmień kolejność zadań na pulpicie",
  "toDoBeforeFeature3":"Przekreśl zadania",
  "toDoBeforeFeature4": "Pokaż wbudowane powiadomienia o alertach przeglądarki",
  "toDoAfterFeature1": "Dodaj / usuń listy rzeczy do zrobienia",
  "toDoAfterFeature2": "Dodaj / usuń zadania do / Z list rzeczy do zrobienia (w tym naciśnięcie \"Enter\" na klawiaturze)",
  "toDoAfterFeature3": "Wyczyść pole wejściowe",
  "toDoAfterFeature4": "Zmień kolejność i przekreśl zadania na urządzeniach mobilnych za pomocą jQuery Mobile i jQuery Touch Punch",
  "toDoAfterFeature5": "Pokaż ładniejsze powiadomienia za pomocą Bootstrap i jQuery UI",
  "toDoAfterFeature6": "Zobacz przewodnik na temat korzystania z aplikacji na różnych platformach za pomocą Bootstrap",
  
  
  "notFound": "Nie mogliśmy znaleźć zasobu, którego szukałeś.",
  "returnHomeParagraph": "Ale zawsze możesz wrócić do",
  "returnHomeLink": "Strona główna",
    
  "copySkill": "Polerowanie kopii",
  "terminalSkill": "Praca w terminalu",
  "accessibilitySkill": "Dostępność",
  "externalApiSkill": "Zewnętrzny interfejs API",
  "nativeSkill": "Natywne Tworzenie aplikacji",
  "troubleshootingSkill": "Rozwiązywanie problemów",
  "TDDSkill": "Rozwój oparty na testach",
  "kanbanSkill": "Tablica Kanban",
  "agileSkill": "Agile workflow",
  "documentationSkill": "Dokumentacja",
  "userStoriesSkill": "Historie użytkowników",
  "collabSkill": "Współpraca",
  "feedbackSkill": "Przekazywanie informacji zwrotnych",
  "contributeSkill": "Wkład",
  "testingSkill": "Testowanie",
  "apiSkill": "Google Calendar API",
  "pwsSkill": "Progressive Web Apps",
  "responsiveSkill": "Responsywny projekt",
  "deploySkill": "Wdrażanie strony internetowej",
  "caseLead": "Rola: główny programista",
  "caseTutor": "Tonny Ntambaazi:",
  "caseTutor2": "Dyrektor kreatywny",
  "caseMentor": "Nizar Triki:",
  "caseMentor2": "Menedżer Inżynierii Oprogramowania",
  "r3playMainTakeaway1": "Najpierw skoncentruj się na wymaganej funkcjonalności",
  "r3playMainTakeaway2": "Zwiększ umiejętności zarządzania czasem",
  "r3playMainTakeaway3": "Pogłęb wiedzę na temat używanych technologii, czytając i ćwicząc więcej",
  "r3playMainTakeaway4": "Nie wątpię w pomoc w przypadku problemów technicznych",
  "r3playCaseChallenge1": "Rozwój strony zaplecza był najbardziej czasochłonny, podczas gdy praca po stronie klienta była najtrudniejsza technicznie. W rezultacie ukończenie pełnego stosu Zajęło mi więcej czasu w porównaniu ze zwykłym czasem trwania dwóch osiągnięć CareerFoundry. Powodem tego było to, że skoncentrowałem się na funkcjonalnych i wizualnych ulepszeniach obu osiągnięć powyżej podstawowych wymagań i potrzebowałem więcej czasu na rozwiązywanie problemów z warunkowym renderowaniem elementów JSX, implementacją Redux w React oraz logiką warunkową stojącą za renderowaniem sugestii filmowych dla użytkownika.",
  "r3playCaseChallenge2": "Niemniej jednak był to mój ulubiony projekt. Z przyjemnością rozwijałem interfejs użytkownika i pracowałem z informacjami o bazie danych. Szybko również poprawiłem swoje umiejętności terminalowe, zrozumienie odpytywania bazy danych MongoDB NoSQL, renderowanie warunkowe, filtrowanie danych, dostosowywanie komponentów React Bootstrap, a także umiejętności zarządzania czasem i ustalania priorytetów. Na szczęście mój wykwalifikowany nauczyciel i mentor pomagał mi podczas projektu i mogłem później zastosować zdobyte umiejętności podczas wdrażania dodatkowych funkcji do aplikacji.",
    
    
    "r3playSlide1Heading":"Interfejs logowania",
    "r3playSlide2Heading":"Interfejs filmowy",
    "r3playSlide3Heading":"Interfejs profilu",
    "r3playSlide1Description":"Widok logowania do aplikacji R3play, w którym użytkownicy mogą zalogować się do aplikacji",
"r3playSlide2Description":"Widok filmu aplikacji R3play, który wyświetla listę filmów dostępnych w aplikacji",
"r3playSlide3Description":"Widok profilu aplikacji R3play, w którym użytkownicy mogą zmieniać informacje o swoim koncie",

"myFlixSlide1Heading": "Interfejs logowania",
"myFlixSlide2Heading": "Interfejs filmowy",
"myFlixSlide3Heading": "Interfejs profilu",
"myFlixSlide1Description": "Widok logowania do aplikacji MyFlix, w którym użytkownicy mogą zalogować się do aplikacji",
"myFlixSlide2Description":"Widok filmu aplikacji MyFlix, który wyświetla listę filmów dostępnych w aplikacji",
"myFlixSlide3Description": "Widok profilu aplikacji MyFlix, w którym użytkownicy mogą zmieniać informacje o swoim koncie",


"meetSlide1Heading": "Ogólny interfejs",
"meetSlide2Heading": "Błędy i ostrzeżenia",
"meetSlide3Heading": "Szczegóły wydarzenia",
"meetSlide1Description": "Zdarzenia aplikacji Meet załadowane do aplikacji z polami formularza umożliwiającymi dostosowanie wyników",
"meetSlide2Description": "Ekran zdarzeń aplikacji Meet pokazuje ostrzeżenia i błędy spowodowane wprowadzonymi nieprawidłowymi danymi",
"meetSlide3Description": "Ekran wydarzeń w aplikacji Meet z rozszerzoną kartą wydarzeń",


"owriteSlide1Heading": "Ekran powitalny",
"owriteSlide2Heading": "Ekran czatu",
"owriteSlide1Description": "Ekran powitalny aplikacji Owrite, na którym użytkownicy mogą wybrać motyw i wejść do pokoju rozmów",
"owriteSlide2Description": "Ekran czatu aplikacji Owrite, na którym użytkownicy mogą rozmawiać, w tym wysyłać pliki audio i graficzne",


"pokemonSlide1Heading": "Wiadomość powitalna",
"pokemonSlide2Heading": "Wyniki Pokemonów",
"pokemonSlide3Heading": "Karta Pokemona",
"pokemonSlide1Description":"Strona główna aplikacji Pokemon z wiadomością powitalną",
"pokemonSlide2Description": "Aplikacja Pokemon filtruje wyniki Pokemonów wyświetlane jako lista",
"pokemonSlide3Description": "Karta Pokemona z danymi, które użytkownik może zobaczyć po kliknięciu nazwy Pokemona",
"toDoSlide1Heading": "Widok początkowy",
"toDoSlide2Heading": "Nowa Lista",
"toDoSlide3Heading": "Powiadomienie",
"toDoSlide1Description": "Początkowy widok aplikacji do zrobienia, w którym użytkownicy przeglądają wskazówki dotyczące korzystania z aplikacji i dodawania pierwszej listy",
"toDoSlide2Description": "Dodano nową listę zadań do wykonania",
"toDoSlide3Description": "Gdy użytkownik pozostawi puste dane wejściowe i spróbuje dodać nowe zadanie, pojawi się komunikat z powiadomieniem",



"cookieInfo1":"Ta aplikacja wykorzystuje pliki cookie i zbiera dane odwiedzających. Czytaj więcej o ",
"cookieInfo2" : " i ",
"cookieInfo3": "", 
"cookieLink1": "Cookie",
"cookieLink2": "Polityka Prywatności",
"cookieConfirm":"Zgadzam się",


"menu": {
"portfolioMenu": "Aplikacja Portfolio",
"aboutMenu": "Informacje",
"projectsMenu": "Projekty",
"casesMenu": "Przypadki",
"testimonialsMenu": "Referencje",
"contactMenu": "Kontakt",
"resumeMenu": "Życiorys",
"r3playMenu": "Aplikacja R3play",
"myFlixMenu":"Aplikacja MyFlix",
"meetMenu": "Aplikacja Meet",
"owriteMenu": "Aplikacja Owrite",
"pokemonMenu": "Aplikacja Pokemon",
"toDoMenu": "Aplikacja To Do",
"policiesMenu":"Zasady",
"cookies": "Cookies",
"privacy": "Prywatność"
},
"footer": {
"copy": "© Yevhenii Airapetian, 2024. Wszelkie prawa zastrzeżone.",
"impressumFooter": "Odcisk",
"toggleTitle": "Kliknij, aby przełączyć pasek boczny"
},


"notFoundImageAlt": "Obraz przedstawiający stary telewizor",
"caseHeroAlt": "Obraz przedstawiający zrzut ekranu ze sprawy projektu",
"caseSliderAlt": "Obraz przedstawiający zrzut ekranu z jednego z widoków aplikacji",
"logoAlt": "Obraz przedstawiający logo aplikacji",
"contactImageAlt": "Obraz przedstawiający przybory do pisania i osobę piszącą",
"testimonialsSliderImageAlt": "Obraz przedstawiający recenzenta",
"testimonialsImageAlt": "Obraz przedstawiający pracę zespołu",
"projectsSliderImageAlt": "Obraz przedstawiający zrzut ekranu wykonany z wdrożonej aplikacji",
"projectsImageAlt": "Obraz przedstawiający miejsce pracy z laptopem i akcesoriami",
"aboutCvDeAlt": "Ikona przedstawiająca niemiecką flagę",
"aboutCvEnAlt": "Ikona przedstawiająca amerykańską flagę",
"aboutCvUkAlt": "Ikona przedstawiająca ukraińską flagę",
"aboutCvDeTitle": "Kliknij tutaj, aby pobrać moje CV w języku niemieckim. Może być konieczne użycie przeglądarki plików, takiej jak Adobe Acrobat lub podobnej",
"aboutCvEnTitle": "Kliknij tutaj, aby pobrać moje CV w języku angielskim. Może być konieczne użycie przeglądarki plików, takiej jak Adobe Acrobat lub podobnej",
"aboutCvUkTitle": "Kliknij tutaj, aby pobrać moje CV w języku ukraińskim. Może być konieczne użycie przeglądarki plików, takiej jak Adobe Acrobat lub podobnej",
"toggleResumeTitle": "Przełącz pliki CV",
"checkOutCodeTitle": "Sprawdź kod na Github",
"profileImageAlt": "Obraz przedstawiający mężczyznę w kurtce"


}